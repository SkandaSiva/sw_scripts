const PWAdebug=false;const PWAversion='0.1';const staticCacheName='24l-static-v1';const assets=['/assets/js/jquery.validate.js','/assets/js/jquery-ui.js','/assets/countdown/jquery.countdown.min.js','/assets/web-ticker/jquery.webticker.js','/assets/web-ticker2/jquery.webticker.js','/assets/web-ticker2/webticker.js','/assets/web-ticker2/webticker.css','/assets/bootpag/bootstrap.min.css','/assets/bootpag/jquery.bootpag.min.js','/assets/bootpag/bootstrap.min.js','/assets/data-tables/jquery.dataTables.js','/assets/data-tables/DT_bootstrap.js','/assets/data-tables/DT_bootstrap.css','/assets/slimmenu/jquery.slimmenu.js','/assets/slimmenu/jquery.easing.min.js','/assets/slimmenu/slimmenu.css','/assets/moment/moment-with-locales.js','/assets/moment/moment.js','/assets/moment/moment-timezone-with-data-2010-2020.min.js','https://fonts.googleapis.com/css?family=Lato:300,400,700,900'];self.addEventListener('install',evt=>{evt.waitUntil(caches.open(staticCacheName).then(cache=>{if(PWAdebug)console.log('Caching assets');cache.addAll(assets);}));});self.addEventListener('activate',evt=>{evt.waitUntil(caches.keys().then(keys=>{return Promise.all(keys.filter(key=>key!==staticCacheName).map(key=>caches.delete(key)));}));});self.addEventListener("fetch",(event)=>{if(PWAdebug)console.log(`Handling fetch event for ${event.request.url}`);event.respondWith(caches.match(event.request).then((response)=>{if(response){if(PWAdebug)console.log("Found response in cache:",response);return response;}
if(PWAdebug)console.log("No response found in cache. About to fetch from networkâ€¦");return fetch(event.request).then((response)=>{if(PWAdebug)console.log("Response from network is:",response);return response;}).catch((error)=>{});}));});if(PWAdebug)console.log('ServiceWorker is here');