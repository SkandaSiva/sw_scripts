// eslint-disable-next-line
const CACHE_PREFIX="revain-cache-",CACHE_VERSION="v1",CACHE_NAME=CACHE_PREFIX+CACHE_VERSION,getTimeDiff=({timeCached:e})=>{return((new Date).getTime()-e.getTime())/36e5},cloneHeaders=e=>{var t=new Headers;for(const s of e.headers.entries())t.append(s[0],s[1]);return t},newResponse=({response:e,headerFn:t})=>{t=t(cloneHeaders(e));return new Response(e.body,{headers:t,status:e.status,statusText:e.statusText,redirected:e.redirected,type:e.type,url:e.url})},fromCacheWithTTL=({event:s,cacheName:e,statusesForCache:n=[200],cacheTTL:a=1})=>{s.respondWith(caches.open(e).then(t=>t.match(s.request).then(e=>{if(e&&getTimeDiff({timeCached:new Date(e.headers.get("Time-Cached"))})<a)return e;return fetch(s.request).then(e=>(n.includes(e.status)&&t.put(s.request,newResponse({response:e.clone(),headerFn:e=>(e.set("Time-Cached",(new Date).getTime()),e)})),e))})))},onInstall=e=>{},onActivate=e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return caches.delete(e)}))).then(()=>self.clients.claim()))},onFetch=e=>{var{method:t,url:s}=e["request"];"GET"===t&&s.includes("/api/v3/categories-tree")&&fromCacheWithTTL({event:e,cacheName:CACHE_NAME})};self.addEventListener("install",onInstall),self.addEventListener("activate",onActivate),self.addEventListener("fetch",onFetch);