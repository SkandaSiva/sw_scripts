const version="1ic2r3g8e",staticAssets=["/css/style.css","/js/script.js","/assets/fonts/Coach_Regular.woff","/assets/fonts/FontAwesome.woff","/assets/fonts/Hundred-Bold_01-6-2.woff","/assets/fonts/Hundred-Bold_Web.woff","/assets/fonts/Port-Condensed_Bold-Italic.woff","/assets/fonts/Port-Condensed_Bold.woff","/assets/fonts/Port-Condensed_Regular-Italic.woff","/assets/fonts/Port-Condensed_Regular.woff","/assets/img/logo.svg"],staticCacheName=version+"::static";function updateStaticCache(){return caches.open(staticCacheName).then(e=>e.addAll(staticAssets.map(e=>new Request(e,{credentials:"same-origin"}))))}function clearOldCaches(){return caches.keys().then(e=>Promise.all(e.filter(e=>0!==e.indexOf(version)).map(e=>caches.delete(e))))}self.addEventListener("install",e=>{e.waitUntil(updateStaticCache().then(()=>self.skipWaiting()))}),self.addEventListener("activate",e=>{e.waitUntil(clearOldCaches().then(()=>self.clients.claim()))}),self.addEventListener("fetch",e=>{const s=e.request;if("document"===s.destination){const t=new URL(e.request.url);if(!/^\/typo3\//.test(t.pathname)){const t=new Headers;for(let e of s.headers.entries())t.set(e[0],e[1]);t.set("x-cached",version);const n={method:s.method,headers:t,mode:"navigate"===s.mode?"same-origin":s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity},a=(s.headers.has("Content-Type")?s.blob():Promise.resolve(void 0)).then(e=>{n.body=e;const t=new Request(s.url,n);return fetch(t)});e.respondWith(a)}}});