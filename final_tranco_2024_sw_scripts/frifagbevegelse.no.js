//2024-04-18 13:33:18
(function(){function f({url:b,event:a}){return clients.matchAll({includeUncontrolled:!0,type:"window"}).then(function(c){for(let d=0;d<c.length;d++)if(c[d].url===b)return client.focus();return a.waitUntil(clients.openWindow(b))})}self.addEventListener("fetch",function(b){"GET"===b.request.method&&b.respondWith(fetch(b.request).then(function(a){return caches.open("v3::pages").then(function(c){if(200===a.status)try{c.put(b.request,a.clone())}catch(d){}return a})}).catch(function(a){return caches.match(b.request).then(function(c){return void 0===
c&&("navigate"===b.request.mode||"GET"===b.request.method&&b.request.headers.get("accept").includes("text/html"))?caches.match("pwa_offline.html"):c})}))});self.addEventListener("activate",function(b){b.waitUntil(caches.keys().then(function(a){return Promise.all(a.filter(function(c){return!c.startsWith("v3::")}).map(function(c){return caches.delete(c)}))}).then(function(){}))});self.addEventListener("install",function(b){var a=(new URL(location)).searchParams.get("payload");if(a&&(a=JSON.parse(atob(decodeURIComponent(a))))&&
a.offline_path){let c=a.offline_path;b.waitUntil(caches.open("v3::offline").then(function(d){fetch(c).then(function(e){if(e.ok)return d.put("pwa_offline.html",e)})}))}self.skipWaiting()});self.addEventListener("notificationclick",function(b){var {notification:a}=b;if(a&&a.data&&a.data.agdata){const c=Object.keys(a.data.agdata.actions);(a=a.data.agdata.actions[c[0]])&&b.waitUntil(f({url:a.url,event:b}))}b.notification.close()});self.addEventListener("push",function(b){const {notification:a}=b.data.json();
return b.waitUntil(self.registration.showNotification(a.title,a))})})();
