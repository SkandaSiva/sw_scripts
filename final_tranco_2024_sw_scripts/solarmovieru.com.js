(()=>{var t=1,d=["/manifest.json","/favicon.ico"],c=[],r=["/404.html"],i="/index.html",a="/404.html",e={assets:"assets-v"+t,content:"content-v"+t,offline:"offline-v"+t,notFound:"404-v"+t},o={"/":3600,html:3600,json:86400,js:86400,css:86400},s=[],l=["GET"];function n(e){return s.length>0&&!s.filter(t=>typeof t=="function"&&!t(e)).length}function u(e){let t=e.split(".").reverse()[0].split("?")[0];return t.endsWith("/")?"/":t}function h(e){if(typeof e=="string"){let t=u(e);return typeof o[t]=="number"?o[t]:null}else return null}function m(){return Promise.all([caches.open(e.assets).then(e=>e.addAll(d)),caches.open(e.offline).then(e=>e.addAll(c)),caches.open(e.notFound).then(e=>e.addAll(r))]).then(()=>self.skipWaiting())}function f(){let t=Object.keys(e).map(t=>e[t]);return new Promise((e,n)=>{caches.keys().then(e=>legacyKeys=e.filter(e=>!~t.indexOf(e))).then(t=>{t.length?Promise.all(t.map(e=>caches.delete(e))).then(()=>{e()}).catch(e=>{n(e)}):e()}).catch(()=>{n()})})}function p(t){n(t)||caches.open(e.content).then(e=>{e.match(t).then(e=>e?null:fetch(t)).then(n=>n?e.put(t,n.clone()):null)})}self.addEventListener("install",e=>{e.waitUntil(Promise.all([m(),self.skipWaiting()]))}),self.addEventListener("activate",e=>{e.waitUntil(Promise.all([f(),self.clients.claim(),self.skipWaiting()]).catch(t=>{e.skipWaiting()}))}),self.addEventListener("fetch",t=>{t.respondWith(caches.open(e.content).then(s=>s.match(t.request).then(e=>{if(e){let o=e.headers.entries(),n=null;for(let e of o)e[0]==="date"&&(n=new Date(e[1]));if(n){let i=parseInt(((new Date).getTime()-n.getTime())/1e3),o=h(t.request.url);return o&&i>o?new Promise(n=>fetch(t.request.clone()).then(o=>{o?(s.put(t.request,o.clone()),n(o)):n(e)}).catch(()=>{n(e)})).catch(t=>e):e}else return e}else return null}).then(o=>o||fetch(t.request.clone()).then(o=>o.status<400?(~l.indexOf(t.request.method)&&!n(t.request.url)&&s.put(t.request,o.clone()),o):caches.open(e.notFound).then(e=>e.match(a))).then(e=>{if(e)return e}).catch(()=>caches.open(e.offline).then(e=>e.match(i)))).catch(e=>{throw console.error("  Error in fetch handler:",e),e})))}),self.addEventListener("message",e=>{if(typeof e.data=="object"&&typeof e.data.action=="string")switch(e.data.action){case"cache":p(e.data.url);break;default:console.log("Unknown action: "+e.data.action);break}})})()