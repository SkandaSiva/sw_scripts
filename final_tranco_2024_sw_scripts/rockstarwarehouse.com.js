try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class c extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const a=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:c}=this.findMatchingRoute({url:s,request:e,event:t});let a,i=c&&c.handler;if(!i&&this.s&&(i=this.s),i){try{a=i.handle({url:s,request:e,event:t,params:n})}catch(e){a=Promise.reject(e)}return a instanceof Promise&&this.i&&(a=a.catch(n=>this.i.handle({url:s,request:e,event:t}))),a}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const c of n){let n;const a=c.match({url:e,request:t,event:s});if(a)return n=a,(Array.isArray(a)&&0===a.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(n=void 0),{route:c,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new i,r.addFetchListener(),r.addCacheListener()),r);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),d=e=>e||f(u.runtime);function l(e){e.then(()=>{})}const b=new Set;class w{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.u=e,this.h=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.h);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:c,includeKeys:a=!1}={}){return await this.transaction([e],"readonly",(i,r)=>{const o=i.objectStore(e),u=t?o.index(t):o,f=[],h=u.openCursor(s,n);h.onsuccess=()=>{const e=h.result;e?(f.push(a?e:e.value),c&&f.length>=c?r(f):e.continue()):r(f)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,c)=>{const a=this.o.transaction(e,t);a.onabort=()=>c(a.error),a.oncomplete=()=>n(),s(a,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,c)=>{const a=s.objectStore(t),i=a[e].apply(a,n);i.onsuccess=()=>c(i.result)})}close(){this.o&&(this.o.close(),this.o=null)}}w.prototype.OPEN_TIMEOUT=2e3;const p={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(p))for(const s of t)s in IDBObjectStore.prototype&&(w.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.4"]&&_()}catch(e){}const g=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class y{constructor(e){this.v=e,this.o=new w("workbox-expiration",1,{onupgradeneeded:e=>this.m(e)})}m(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.v)}async setTimestamp(e,t){const s={url:e=g(e),timestamp:t,cacheName:this.v,id:this._(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this._(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const c=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),a=[];let i=0;c.onsuccess=()=>{const s=c.result;if(s){const n=s.value;n.cacheName===this.v&&(e&&n.timestamp<e||t&&i>=t?a.push(s.value):i++),s.continue()}else n(a)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}_(e){return this.v+"|"+g(e)}}class v{constructor(e,t={}){this.R=!1,this.k=!1,this.q=t.maxEntries,this.j=t.maxAgeSeconds,this.v=e,this.U=new y(e)}async expireEntries(){if(this.R)return void(this.k=!0);this.R=!0;const e=this.j?Date.now()-1e3*this.j:0,t=await this.U.expireEntries(e,this.q),s=await self.caches.open(this.v);for(const e of t)await s.delete(e);this.R=!1,this.k&&(this.k=!1,l(this.expireEntries()))}async updateTimestamp(e){await this.U.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.j){return await this.U.getTimestamp(e)<Date.now()-1e3*this.j}return!1}async delete(){this.k=!1,await this.U.expireEntries(1/0)}}const x=(e,t)=>e.filter(e=>t in e),m=async({request:e,mode:t,plugins:s=[]})=>{const n=x(s,"cacheKeyWillBeUsed");let c=e;for(const e of n)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},R=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:c=[]})=>{const a=await self.caches.open(e),i=await m({plugins:c,request:t,mode:"read"});let r=await a.match(i,n);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;r=await c.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:i})}return r},k=async({cacheName:e,request:s,response:n,event:c,plugins:i=[],matchOptions:r})=>{const o=await m({plugins:i,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:a(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let c=t,a=!1;for(const t of n)if("cacheWillUpdate"in t){a=!0;const n=t.cacheWillUpdate;if(c=await n.call(t,{request:e,response:c,event:s}),!c)break}return a||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:i,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=x(i,"cacheDidUpdate"),d=h.length>0?await R({cacheName:e,matchOptions:r,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of b)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:d,newResponse:u,request:o})},q=R,j=async({request:e,fetchOptions:s,event:n,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const a=x(c,"fetchDidFail"),i=a.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of a)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}let U;async function L(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=t?t(n):n,a=function(){if(void 0===U){const e=new Response("");if("body"in e)try{new Response(e.body),U=!0}catch(e){U=!1}U=!1}return U}()?s.body:await s.blob();return new Response(a,c)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function N(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(n,location.href),a=new URL(n,location.href);return c.searchParams.set("__WB_REVISION__",s),{cacheKey:c.href,url:a.href}}class E{constructor(e){this.v=h(e),this.L=new Map,this.N=new Map,this.M=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:c}=N(n),a="string"!=typeof n&&n.revision?"reload":"default";if(this.L.has(c)&&this.L.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.L.get(c),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.M.has(e)&&this.M.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this.M.set(e,n.integrity)}if(this.L.set(c,e),this.N.set(c,a),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],c=await self.caches.open(this.v),a=await c.keys(),i=new Set(a.map(e=>e.url));for(const[e,t]of this.L)i.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const c=this.M.get(s),a=this.N.get(n);return this.K({cacheKey:s,cacheMode:a,event:e,integrity:c,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.v),t=await e.keys(),s=new Set(this.L.values()),n=[];for(const c of t)s.has(c.url)||(await e.delete(c),n.push(c.url));return{deletedURLs:n}}async K({cacheKey:e,url:s,cacheMode:n,event:c,plugins:a,integrity:i}){const r=new Request(s,{integrity:i,cache:n,credentials:"same-origin"});let o,u=await j({event:c,plugins:a,request:r});for(const e of a||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:r,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await L(u)),await k({event:c,plugins:a,response:u,request:e===s?r:new Request(e),cacheName:this.v,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.L}getCachedURLs(){return[...this.L.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.L.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.v)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.v,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),c=new Request(e);return()=>n({request:c})}}let M;const K=()=>(M||(M=new E),M);const T=(e,t)=>{const s=K().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:c}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let O=!1;function D(e){O||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const c=h();self.addEventListener("fetch",a=>{const i=T(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!i)return;let r=self.caches.open(c).then(e=>e.match(i)).then(e=>e||fetch(i));a.respondWith(r)})})(e),O=!0)}const P=[],S={get:()=>P,add(e){P.push(...e)}},W=e=>{const t=K(),s=S.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},A=e=>{const t=K();e.waitUntil(t.activate())};var C;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),C={},function(e){K().addToCacheList(e),e.length>0&&(self.addEventListener("install",W),self.addEventListener("activate",A))}([{url:"/_next/static/WP9Tt2xMFNvnvS1WRY8h2/_buildManifest.js",revision:"5bcecf73c4f3c13704cff55bbce3952c"},{url:"/_next/static/WP9Tt2xMFNvnvS1WRY8h2/_ssgManifest.js",revision:"b6652df95db52feb4daf4eca35380933"},{url:"/_next/static/chunks/152-42cee9ce759061bf.js",revision:"c84db20fd3b38c1d8a0f4529402e8b08"},{url:"/_next/static/chunks/171.12f3d243355e787a.js",revision:"7960b59a3ac51da26937475bb2c56dc1"},{url:"/_next/static/chunks/1cb89f09-fdb9145740d153e6.js",revision:"6d09db6149ec3d6ac17c6e34a89110e5"},{url:"/_next/static/chunks/249-53ebc1b64ad0f590.js",revision:"30fa6abbce548fcec73c8138a35168c1"},{url:"/_next/static/chunks/324-96fdfb69abccafe2.js",revision:"64ccedb6bb6781d7d3a2cdf4fee4e329"},{url:"/_next/static/chunks/598-cd8f14cfec8345e3.js",revision:"5610e4c0168383c96bf848e8ed9a3c5f"},{url:"/_next/static/chunks/615-7a58d564a6739f90.js",revision:"24c21b854fba54866fc5d6591ae5528c"},{url:"/_next/static/chunks/63-767c722766ef3279.js",revision:"8c3f526951615d59c1403e0b2145e769"},{url:"/_next/static/chunks/663-79ccb57f47f5ccbf.js",revision:"f15599f214db538d671cb3062b22ec83"},{url:"/_next/static/chunks/686-113231389854a23d.js",revision:"cf08f279e9fe2db2be5986dcb6f096b3"},{url:"/_next/static/chunks/711-8e96166d9e088c4f.js",revision:"7f011b333a441efbdd3f3a026d615626"},{url:"/_next/static/chunks/745-a5d2057e8bbbedc0.js",revision:"702427a5b6373e4e989bab819e973b08"},{url:"/_next/static/chunks/846-699a1fd4e671082e.js",revision:"4252a3120d2ac88792ba45bd23be46c6"},{url:"/_next/static/chunks/848.2ffb2fcd33031466.js",revision:"a1c3dd119d9608bf290bdb7f6560fadf"},{url:"/_next/static/chunks/886.a6ac6abcf610e7c1.js",revision:"f80e07016277fe9bc048e496b2f81e33"},{url:"/_next/static/chunks/890-cbcac1343e507dec.js",revision:"167fa9a59754081e959f347dcfc64130"},{url:"/_next/static/chunks/899-29f185c2a2c5eb45.js",revision:"52784587043c8abbf0e9e562c54dd9b5"},{url:"/_next/static/chunks/910-87864d7ea59b98a6.js",revision:"a8a8af0388978ef40956a703f38dc4c3"},{url:"/_next/static/chunks/914-58bc35f10bceb4e6.js",revision:"4e101d4d3685768ec85757dbd429569a"},{url:"/_next/static/chunks/969.64356c05a3a460b6.js",revision:"09e32042829305922e633d603a2ad730"},{url:"/_next/static/chunks/982-a7c76919da6d6dfd.js",revision:"595ad7e38766b64c72955f44e4ba97cd"},{url:"/_next/static/chunks/framework-56291c8f77938afa.js",revision:"5d3b69c9054dd37d9e8c5edf699354c6"},{url:"/_next/static/chunks/main-f2b0d0bbec55762f.js",revision:"aaab6e916595b5f642d65188ea145302"},{url:"/_next/static/chunks/pages/[...segments]-abbad91a2f8b6d1b.js",revision:"d6f4df23c38d1040a3e914094110d328"},{url:"/_next/static/chunks/pages/[slug]-c3f74630a6919a99.js",revision:"8f891ad055cf3522e144af5e6713d246"},{url:"/_next/static/chunks/pages/_app-35382e0ead2ec07d.js",revision:"fe81ef58a95f252c9b933c63bf15b2c8"},{url:"/_next/static/chunks/pages/_error-ce334e19f6a2a8fa.js",revision:"ac05b156b3d7b4cfd79cafd9b7045854"},{url:"/_next/static/chunks/pages/account-27f3a9cacaa2239b.js",revision:"46a0d0f6395b2533345e6b923ed75022"},{url:"/_next/static/chunks/pages/account/order-history-1e5ef60dd64bb5cb.js",revision:"c41ed793393834657cccc1af8f5cf492"},{url:"/_next/static/chunks/pages/cart-7a659e5f9a392806.js",revision:"2866d5b379dea54419037b2a3018ad8f"},{url:"/_next/static/chunks/pages/checkout-d36fd52a18a51a86.js",revision:"253fb409fa93e6983428fc5df2442935"},{url:"/_next/static/chunks/pages/connect/gateway-30d05f0db2a5cc3b.js",revision:"776f78c23ba3c736c99f6be2a64db09d"},{url:"/_next/static/chunks/pages/connect/invalid-state-5da7ba0a16ab6d3d.js",revision:"c1f4c452fa59925dd01e30c85449b98d"},{url:"/_next/static/chunks/pages/game/[id]-b8b636393816a836.js",revision:"64c558adac8b0a1bc2e3937f0c9a19a1"},{url:"/_next/static/chunks/pages/index-75fe76926648a93a.js",revision:"58ff50048407c081d3e2e623ff8cb910"},{url:"/_next/static/chunks/pages/merchandise/[id]-136adefc1fec786e.js",revision:"0f74e5e4803bc6abba933c0c4407d308"},{url:"/_next/static/chunks/pages/news/[id]-8550c023c4445550.js",revision:"3c41b3f6e9764a6f39880a5f89e9d95c"},{url:"/_next/static/chunks/pages/news/tag/[id]-453e894586232c80.js",revision:"a70b7bbcb409efdfa3bd202b1dec39a6"},{url:"/_next/static/chunks/pages/offers-cecffa6041652bfa.js",revision:"2492bbc835c7ac64f38ebf654d40b28b"},{url:"/_next/static/chunks/pages/search-c16fcc1604306262.js",revision:"453ace01cce5ff889be41708f4302179"},{url:"/_next/static/chunks/pages/store-open/[...id]-b47790e0fe4b189d.js",revision:"498e457c4bfd53c89f2f5625a4758a03"},{url:"/_next/static/chunks/pages/store-return/[...id]-74f9714dd1ab880c.js",revision:"b36d41d1ae3ccc25f56bc5a4eba02241"},{url:"/_next/static/chunks/pages/update-payment-ebbfffa158019d3c.js",revision:"4b8142c68f08506f4ce375ac5c9fb9ad"},{url:"/_next/static/chunks/polyfills-42372ed130431b0a.js",revision:"846118c33b2c0e922d7b3a7676f81f6f"},{url:"/_next/static/chunks/webpack-b811ded12287eab7.js",revision:"69feba4d08e04287a6d732c2257ede72"},{url:"/_next/static/css/086f7b64f8ba2b79.css",revision:"82dab0a7115d1702db6938b95c18da53"},{url:"/_next/static/css/99022ad5f68575a5.css",revision:"d79960fde4af2209ae3633170831ad3f"},{url:"/_next/static/css/aa8a0438adf45780.css",revision:"b51199e656e620765525079ff6053946"},{url:"/_next/static/css/e3103bc2ffbfd53e.css",revision:"67294008837264c16f032dc459ccd987"},{url:"/_next/static/css/e855e6edf1da7a2c.css",revision:"7e0d39b5a522ea17d4a03180d01a0691"},{url:"/_next/static/css/f5b64c6cd26cea17.css",revision:"deb03855674b4ded5fc839447445f59f"}]),D(C),function(e,s,a){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new n(({url:e})=>e.href===t.href,s,a)}else if(e instanceof RegExp)i=new c(e,s,a);else if("function"==typeof e)i=new n(e,s,a);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}o().registerRoute(i)}(/\/fonts\//,new class{constructor(e={}){this.v=d(e.cacheName),this.T=e.plugins||[],this.O=e.fetchOptions,this.D=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,c=await q({cacheName:this.v,request:s,event:e,matchOptions:this.D,plugins:this.T});if(!c)try{c=await this.P(s,e)}catch(e){n=e}if(!c)throw new t("no-response",{url:s.url,error:n});return c}async P(e,t){const s=await j({request:e,event:t,fetchOptions:this.O,plugins:this.T}),n=s.clone(),c=k({cacheName:this.v,request:e,response:n,event:t,plugins:this.T});if(t)try{t.waitUntil(c)}catch(e){}return s}}({cacheName:"fonts",fetchOptions:{credentials:"same-origin"},plugins:[{fetchDidSucceed:async({request:e,response:t})=>(401===t.status&&self.registration.unregister().catch(e=>console.error(e)),t)},new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const c=this.S(n),a=this.W(s);l(a.expireEntries());const i=a.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){}return c?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.W(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.A=e,this.j=e.maxAgeSeconds,this.C=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),b.add(t))}W(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.C.get(e);return s||(s=new v(e,this.A),this.C.set(e,s)),s}S(e){if(!this.j)return!0;const t=this.I(e);if(null===t)return!0;return t>=Date.now()-1e3*this.j}I(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.C)await self.caches.delete(e),await t.delete();this.C=new Map}}({maxEntries:6,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=service-worker.js.map
