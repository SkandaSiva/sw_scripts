!function(){"use strict";!function(){const e={NODE_ENV:"production"};try{if(process)return process.env=Object.assign({},process.env),void Object.assign(process.env,e)}catch(e){}globalThis.process={env:e}}();try{self["workbox:core:7.0.0"]&&_()}catch(e){}const e={"invalid-value":({paramName:e,validValueDescription:t,value:r})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${e}' parameter was given a value with an unexpected value. ${t} Received a value of ${JSON.stringify(r)}.`},"not-an-array":({moduleName:e,className:t,funcName:r,paramName:s})=>{if(!(e&&t&&r&&s))throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${s}' passed into '${e}.${t}.${r}()' must be an array.`},"incorrect-type":({expectedType:e,paramName:t,moduleName:r,className:s,funcName:a})=>{if(!(e&&t&&r&&a))throw new Error("Unexpected input to 'incorrect-type' error.");return`The parameter '${t}' passed into '${r}.${s?`${s}.`:""}${a}()' must be of type ${e}.`},"incorrect-class":({expectedClassName:e,paramName:t,moduleName:r,className:s,funcName:a,isReturnValueProblem:n})=>{if(!e||!r||!a)throw new Error("Unexpected input to 'incorrect-class' error.");const o=s?`${s}.`:"";return n?`The return value from '${r}.${o}${a}()' must be an instance of class ${e}.`:`The parameter '${t}' passed into '${r}.${o}${a}()' must be an instance of class ${e}.`},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:r,className:s,funcName:a})=>{if(!(e&&t&&r&&s&&a))throw new Error("Unexpected input to 'missing-a-method' error.");return`${r}.${s}.${a}() expected the '${t}' parameter to expose a '${e}' method.`},"add-to-cache-list-unexpected-type":({entry:e})=>`An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry '${JSON.stringify(e)}' isn't supported. You must supply an array of strings with one or more characters, objects with a url property or Request objects.`,"add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${e} but different revision details. Workbox is unable to cache and version the asset correctly. Please remove one of the entries.`},"plugin-error-request-will-fetch":({thrownErrorMessage:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return`An error was thrown by a plugins 'requestWillFetch()' method. The thrown error message was: '${e}'.`},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return`You must provide a name containing at least one character for setCacheDetails({${e}: '...'}). Received a value of '${JSON.stringify(t)}'`},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return`The route you're trying to unregister was not  previously registered for the method type '${e}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>`Replaying the background sync queue '${e}' failed.`,"duplicate-queue-name":({name:e})=>`The Queue name '${e}' is already being used. All instances of backgroundSync.Queue must be given unique names.`,"expired-test-without-max-age":({methodName:e,paramName:t})=>`The '${e}()' method can only be used when the '${t}' is used in the constructor.`,"unsupported-route-type":({moduleName:e,className:t,funcName:r,paramName:s})=>`The supplied '${s}' parameter was an unsupported type. Please check the docs for ${e}.${t}.${r} for valid input types.`,"not-array-of-class":({value:e,expectedClass:t,moduleName:r,className:s,funcName:a,paramName:n})=>`The supplied '${n}' parameter must be an array of '${t}' objects. Received '${JSON.stringify(e)},'. Please check the call to ${r}.${s}.${a}() to fix the issue.`,"max-entries-or-age-required":({moduleName:e,className:t,funcName:r})=>`You must define either config.maxEntries or config.maxAgeSecondsin ${e}.${t}.${r}`,"statuses-or-headers-required":({moduleName:e,className:t,funcName:r})=>`You must define either config.statuses or config.headersin ${e}.${t}.${r}`,"invalid-string":({moduleName:e,funcName:t,paramName:r})=>{if(!r||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${r}' parameter must start with 'http' (for cross-origin matches) or '/' (for same-origin matches). Please see the docs for ${e}.${t}() for more info.`},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return`The 'unit' portion of the Range header must be set to 'bytes'. The Range header provided was "${e}"`},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return`Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "${e}"`},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return`The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "${e}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:r})=>`The start (${t}) and end (${r}) values in the Range are not satisfiable by the cached response, which is ${e} bytes.`,"attempt-to-cache-non-get-request":({url:e,method:t})=>`Unable to cache '${e}' because it is a '${t}' request and only 'GET' requests can be cached.`,"cache-put-with-no-response":({url:e})=>`There was an attempt to cache '${e}' but the response was not defined.`,"no-response":({url:e,error:t})=>{let r=`The strategy could not generate a response for '${e}'.`;return t&&(r+=` The underlying error is ${t}.`),r},"bad-precaching-response":({url:e,status:t})=>`The precaching request for '${e}' failed`+(t?` with an HTTP status of ${t}.`:"."),"non-precached-url":({url:e})=>`createHandlerBoundToURL('${e}') was called, but that URL is not precached. Please pass in a URL that is precached instead.`,"add-to-cache-list-conflicting-integrities":({url:e})=>`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${e} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:e,url:t})=>`Unable to find a precached response in ${e} for ${t}.`,"cross-origin-copy-response":({origin:e})=>`workbox-core.copyResponse() can only be used with same-origin responses. It was passed a response with origin ${e}.`,"opaque-streams-source":({type:e})=>{const t=`One of the workbox-streams sources resulted in an '${e}' response.`;return"opaqueredirect"===e?`${t} Please do not use a navigation request that results in a redirect as a source.`:`${t} Please ensure your sources are CORS-enabled.`}},t="production"===process.env.NODE_ENV?(e,...t)=>{let r=e;return t.length>0&&(r+=` :: ${JSON.stringify(t)}`),r}:(t,r={})=>{const s=e[t];if(!s)throw new Error(`Unable to find message for code '${t}'.`);return s(r)};class r extends Error{constructor(e,r){super(t(e,r)),this.name=e,this.details=r}}const s="production"===process.env.NODE_ENV?null:{hasMethod:(e,t,s)=>{if("function"!==typeof e[t])throw s.expectedMethod=t,new r("missing-a-method",s)},isArray:(e,t)=>{if(!Array.isArray(e))throw new r("not-an-array",t)},isInstance:(e,t,s)=>{if(!(e instanceof t))throw s.expectedClassName=t.name,new r("incorrect-class",s)},isOneOf:(e,t,s)=>{if(!t.includes(e))throw s.validValueDescription=`Valid values are ${JSON.stringify(t)}.`,new r("invalid-value",s)},isType:(e,t,s)=>{if(typeof e!==t)throw s.expectedType=t,new r("incorrect-type",s)},isArrayOfClass:(e,t,s)=>{const a=new r("not-array-of-class",s);if(!Array.isArray(e))throw a;for(const r of e)if(!(r instanceof t))throw a}},a="production"===process.env.NODE_ENV?null:(()=>{"__WB_DISABLE_DEV_LOGS"in globalThis||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},r=function(r,s){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===r&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[r](...s);const a=e?[]:["%cworkbox",[`background: ${t[r]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"].join(";")];console[r](...a,...s),"groupCollapsed"===r&&(e=!0),"groupEnd"===r&&(e=!1)},s={},a=Object.keys(t);for(const e of a){const t=e;s[t]=(...e)=>{r(t,e)}}return s})();try{self["workbox:routing:7.0.0"]&&_()}catch(e){}const n=["DELETE","GET","HEAD","PATCH","POST","PUT"],o=e=>e&&"object"==typeof e?("production"!==process.env.NODE_ENV&&s.hasMethod(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):("production"!==process.env.NODE_ENV&&s.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e});class i{constructor(e,t,r="GET"){"production"!==process.env.NODE_ENV&&(s.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),r&&s.isOneOf(r,n,{paramName:"method"})),this.handler=o(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=o(e)}}class c extends i{constructor(e,t,r){"production"!==process.env.NODE_ENV&&s.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super((({url:t})=>{const r=e.exec(t.href);if(r){if(t.origin===location.origin||0===r.index)return r.slice(1);"production"!==process.env.NODE_ENV&&a.debug(`The regular expression '${e.toString()}' only partially matched against the cross-origin URL '${t.toString()}'. RegExpRoute's will only handle cross-origin requests if they match the entire URL.`)}}),t,r)}}const u=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class h{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,r=this.handleRequest({request:t,event:e});r&&e.respondWith(r)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;"production"!==process.env.NODE_ENV&&a.debug("Caching URLs from the window",t.urlsToCache);const r=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const r=new Request(...t);return this.handleRequest({request:r,event:e})})));e.waitUntil(r),e.ports&&e.ports[0]&&r.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){"production"!==process.env.NODE_ENV&&s.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const r=new URL(e.url,location.href);if(!r.protocol.startsWith("http"))return void("production"!==process.env.NODE_ENV&&a.debug("Workbox Router only supports URLs that start with 'http'."));const n=r.origin===location.origin,{params:o,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:r});let c=i&&i.handler;const h=[];"production"!==process.env.NODE_ENV&&c&&(h.push(["Found a route to handle this request:",i]),o&&h.push(["Passing the following params to the route's handler:",o]));const l=e.method;if(!c&&this._defaultHandlerMap.has(l)&&("production"!==process.env.NODE_ENV&&h.push(`Failed to find a matching route. Falling back to the default handler for ${l}.`),c=this._defaultHandlerMap.get(l)),!c)return void("production"!==process.env.NODE_ENV&&a.debug(`No route found for: ${u(r)}`));let d;"production"!==process.env.NODE_ENV&&(a.groupCollapsed(`Router is responding to: ${u(r)}`),h.forEach((e=>{Array.isArray(e)?a.log(...e):a.log(e)})),a.groupEnd());try{d=c.handle({url:r,request:e,event:t,params:o})}catch(e){d=Promise.reject(e)}const p=i&&i.catchHandler;return d instanceof Promise&&(this._catchHandler||p)&&(d=d.catch((async s=>{if(p){"production"!==process.env.NODE_ENV&&(a.groupCollapsed(`Error thrown when responding to:  ${u(r)}. Falling back to route's Catch Handler.`),a.error("Error thrown by:",i),a.error(s),a.groupEnd());try{return await p.handle({url:r,request:e,event:t,params:o})}catch(e){e instanceof Error&&(s=e)}}if(this._catchHandler)return"production"!==process.env.NODE_ENV&&(a.groupCollapsed(`Error thrown when responding to:  ${u(r)}. Falling back to global Catch Handler.`),a.error("Error thrown by:",i),a.error(s),a.groupEnd()),this._catchHandler.handle({url:r,request:e,event:t});throw s}))),d}findMatchingRoute({url:e,sameOrigin:t,request:r,event:s}){const n=this._routes.get(r.method)||[];for(const o of n){let n;const i=o.match({url:e,sameOrigin:t,request:r,event:s});if(i)return"production"!==process.env.NODE_ENV&&i instanceof Promise&&a.warn(`While routing ${u(e)}, an async matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:`,o),n=i,(Array.isArray(n)&&0===n.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:o,params:n}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,o(e))}setCatchHandler(e){this._catchHandler=o(e)}registerRoute(e){"production"!==process.env.NODE_ENV&&(s.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),s.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),s.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"})),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new r("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new r("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let l;const d=()=>(l||(l=new h,l.addFetchListener(),l.addCacheListener()),l);function p(e,t,s){let n;if("string"==typeof e){const o=new URL(e,location.href);if("production"!==process.env.NODE_ENV){if(!e.startsWith("/")&&!e.startsWith("http"))throw new r("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?o.pathname:e,s="[*:?+]";new RegExp(`${s}`).exec(t)&&a.debug(`The '$capture' parameter contains an Express-style wildcard character (${s}). Strings are now always interpreted as exact matches; use a RegExp for partial or wildcard matches.`)}n=new i((({url:t})=>("production"!==process.env.NODE_ENV&&t.pathname===o.pathname&&t.origin!==o.origin&&a.debug(`${e} only partially matches the cross-origin URL ${t.toString()}. This route will only handle cross-origin requests if they match the entire URL.`),t.href===o.href)),t,s)}else if(e instanceof RegExp)n=new c(e,t,s);else if("function"==typeof e)n=new i(e,t,s);else{if(!(e instanceof i))throw new r("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return d().registerRoute(n),n}const m={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[m.prefix,e,m.suffix].filter((e=>e&&e.length>0)).join("-"),g=e=>e||f(m.runtime);function w(e,t){const r=new URL(e);for(const e of t)r.searchParams.delete(e);return r.href}class N{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const E=new Set;try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}function b(e){return"string"==typeof e?new Request(e):e}class y{constructor(e,t){this._cacheKeys={},"production"!==process.env.NODE_ENV&&s.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new N,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return"production"!==process.env.NODE_ENV&&a.log(`Using a preloaded navigation response for '${u(s.url)}'`),e}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new r("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const o=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions),"production"!==process.env.NODE_ENV&&a.debug(`Network request for '${u(s.url)}' returned a response with status '${e.status}'.`);for(const r of this.iterateCallbacks("fetchDidSucceed"))e=await r({event:t,request:o,response:e});return e}catch(e){throw"production"!==process.env.NODE_ENV&&a.log(`Network request for '${u(s.url)}' threw an error.`,e),n&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:n.clone(),request:o.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),r=t.clone();return this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){const t=b(e);let r;const{cacheName:s,matchOptions:n}=this._strategy,o=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},n),{cacheName:s});r=await caches.match(o,i),"production"!==process.env.NODE_ENV&&(r?a.debug(`Found a cached response in '${s}'.`):a.debug(`No cached response found in '${s}'.`));for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))r=await e({cacheName:s,matchOptions:n,cachedResponse:r,request:o,event:this.event})||void 0;return r}async cachePut(e,t){const s=b(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const o=await this.getCacheKey(s,"write");if("production"!==process.env.NODE_ENV){if(o.method&&"GET"!==o.method)throw new r("attempt-to-cache-non-get-request",{url:u(o.url),method:o.method});const e=t.headers.get("Vary");e&&a.debug(`The response for ${u(o.url)} has a 'Vary: ${e}' header. Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.`)}if(!t)throw"production"!==process.env.NODE_ENV&&a.error(`Cannot cache non-existent response for '${u(o.url)}'.`),new r("cache-put-with-no-response",{url:u(o.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return"production"!==process.env.NODE_ENV&&a.debug(`Response '${u(o.url)}' will not be cached.`,i),!1;const{cacheName:c,matchOptions:h}=this._strategy,l=await self.caches.open(c),d=this.hasCallback("cacheDidUpdate"),p=d?await async function(e,t,r,s){const a=w(t.url,r);if(t.url===a)return e.match(t,s);const n=Object.assign(Object.assign({},s),{ignoreSearch:!0}),o=await e.keys(t,n);for(const t of o)if(a===w(t.url,r))return e.match(t,s)}(l,o.clone(),["__WB_REVISION__"],h):null;"production"!==process.env.NODE_ENV&&a.debug(`Updating the '${c}' cache with a new Response for ${u(o.url)}.`);try{await l.put(o,d?i.clone():i)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){"production"!==process.env.NODE_ENV&&a.log(`About to run ${E.size} callbacks to clean up caches.`);for(const e of E)await e(),"production"!==process.env.NODE_ENV&&a.log(e,"is complete.");"production"!==process.env.NODE_ENV&&a.log("Finished running callbacks.")}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:p,newResponse:i.clone(),request:o,event:this.event});return!0}async getCacheKey(e,t){const r=`${e.url} | ${t}`;if(!this._cacheKeys[r]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=b(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[r]=s}return this._cacheKeys[r]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const r=this._pluginStateMap.get(t),s=s=>{const a=Object.assign(Object.assign({},s),{state:r});return t[e](a)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,r=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,r=!0,!t)break;return r||(t&&200!==t.status&&(t=void 0),"production"!==process.env.NODE_ENV&&t&&200!==t.status&&(0===t.status?a.warn(`The response for '${this.request.url}' is an opaque response. The caching strategy that you're using will not cache opaque responses by default.`):a.debug(`The response for '${this.request.url}' returned a status code of '${e.status}' and won't be cached as a result.`))),t}}class v{constructor(e={}){this.cacheName=g(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,s="params"in e?e.params:void 0,a=new y(this,{event:t,request:r,params:s}),n=this._getResponse(a,r,t);return[n,this._awaitComplete(n,a,r,t)]}async _getResponse(e,t,s){let n;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(n=await this._handle(t,e),!n||"error"===n.type)throw new r("no-response",{url:t.url})}catch(r){if(r instanceof Error)for(const a of e.iterateCallbacks("handlerDidError"))if(n=await a({error:r,event:s,request:t}),n)break;if(!n)throw r;"production"!==process.env.NODE_ENV&&a.log(`While responding to '${u(t.url)}', an ${r instanceof Error?r.toString():""} error occurred. Using a fallback response provided by a handlerDidError plugin.`)}for(const r of e.iterateCallbacks("handlerWillRespond"))n=await r({event:s,request:t,response:n});return n}async _awaitComplete(e,t,r,s){let a,n;try{a=await e}catch(n){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:r,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:s,request:r,response:a,error:n}),t.destroy(),n)throw n}}const x=(e,t)=>`Using ${e} to respond to '${u(t.url)}'`,D=e=>{e&&(a.groupCollapsed("View the final response here."),a.log(e||"[No response returned]"),a.groupEnd())};const $={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};try{self["workbox:cacheable-response:7.0.0"]&&_()}catch(e){}class R{constructor(e={}){if("production"!==process.env.NODE_ENV){if(!e.statuses&&!e.headers)throw new r("statuses-or-headers-required",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor"});e.statuses&&s.isArray(e.statuses,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.statuses"}),e.headers&&s.isType(e.headers,"object",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.headers"})}this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){"production"!==process.env.NODE_ENV&&s.isInstance(e,Response,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"isResponseCacheable",paramName:"response"});let t=!0;if(this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),"production"!==process.env.NODE_ENV&&!t){a.groupCollapsed(`The request for '${u(e.url)}' returned a response that does not meet the criteria for being cached.`),a.groupCollapsed("View cacheability criteria here."),a.log("Cacheable statuses: "+JSON.stringify(this._statuses)),a.log("Cacheable headers: "+JSON.stringify(this._headers,null,2)),a.groupEnd();const t={};e.headers.forEach(((e,r)=>{t[r]=e})),a.groupCollapsed("View response status and headers here."),a.log(`Response status: ${e.status}`),a.log("Response headers: "+JSON.stringify(t,null,2)),a.groupEnd(),a.groupCollapsed("View full response details here."),a.log(e.headers),a.log(e),a.groupEnd(),a.groupEnd()}return t}}function k(e){e.then((()=>{}))}const O=(e,t)=>t.some((t=>e instanceof t));let T,q;const C=new WeakMap,V=new WeakMap,S=new WeakMap,U=new WeakMap,A=new WeakMap;let L={get(e,t,r){if(e instanceof IDBTransaction){if("done"===t)return V.get(e);if("objectStoreNames"===t)return e.objectStoreNames||S.get(e);if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return M(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function P(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(q||(q=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(W(this),t),M(C.get(this))}:function(...t){return M(e.apply(W(this),t))}:function(t,...r){const s=e.call(W(this),t,...r);return S.set(s,t.sort?t.sort():[t]),M(s)}}function I(e){return"function"==typeof e?P(e):(e instanceof IDBTransaction&&function(e){if(V.has(e))return;const t=new Promise(((t,r)=>{const s=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",n),e.removeEventListener("abort",n)},a=()=>{t(),s()},n=()=>{r(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",a),e.addEventListener("error",n),e.addEventListener("abort",n)}));V.set(e,t)}(e),O(e,T||(T=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,L):e)}function M(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,r)=>{const s=()=>{e.removeEventListener("success",a),e.removeEventListener("error",n)},a=()=>{t(M(e.result)),s()},n=()=>{r(e.error),s()};e.addEventListener("success",a),e.addEventListener("error",n)}));return t.then((t=>{t instanceof IDBCursor&&C.set(t,e)})).catch((()=>{})),A.set(t,e),t}(e);if(U.has(e))return U.get(e);const t=I(e);return t!==e&&(U.set(e,t),A.set(t,e)),t}const W=e=>A.get(e);const j=["get","getKey","getAll","getAllKeys","count"],B=["put","add","delete","clear"],H=new Map;function F(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(H.get(t))return H.get(t);const r=t.replace(/FromIndex$/,""),s=t!==r,a=B.includes(r);if(!(r in(s?IDBIndex:IDBObjectStore).prototype)||!a&&!j.includes(r))return;const n=async function(e,...t){const n=this.transaction(e,a?"readwrite":"readonly");let o=n.store;return s&&(o=o.index(t.shift())),(await Promise.all([o[r](...t),a&&n.done]))[0]};return H.set(t,n),n}L=(e=>({...e,get:(t,r,s)=>F(t,r)||e.get(t,r,s),has:(t,r)=>!!F(t,r)||e.has(t,r)}))(L);try{self["workbox:expiration:7.0.0"]&&_()}catch(e){}const K="cache-entries",G=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class J{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(K,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const r=indexedDB.deleteDatabase(e);t&&r.addEventListener("blocked",(e=>t(e.oldVersion,e))),M(r).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const r={url:e=G(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},s=(await this.getDb()).transaction(K,"readwrite",{durability:"relaxed"});await s.store.put(r),await s.done}async getTimestamp(e){const t=await this.getDb(),r=await t.get(K,this._getId(e));return null==r?void 0:r.timestamp}async expireEntries(e,t){const r=await this.getDb();let s=await r.transaction(K).store.index("timestamp").openCursor(null,"prev");const a=[];let n=0;for(;s;){const r=s.value;r.cacheName===this._cacheName&&(e&&r.timestamp<e||t&&n>=t?a.push(s.value):n++),s=await s.continue()}const o=[];for(const e of a)await r.delete(K,e.id),o.push(e.url);return o}_getId(e){return this._cacheName+"|"+G(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:r,upgrade:s,blocking:a,terminated:n}={}){const o=indexedDB.open(e,t),i=M(o);return s&&o.addEventListener("upgradeneeded",(e=>{s(M(o.result),e.oldVersion,e.newVersion,M(o.transaction),e)})),r&&o.addEventListener("blocked",(e=>r(e.oldVersion,e.newVersion,e))),i.then((e=>{n&&e.addEventListener("close",(()=>n())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),i}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class Y{constructor(e,t={}){if(this._isRunning=!1,this._rerunRequested=!1,"production"!==process.env.NODE_ENV){if(s.isType(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"cacheName"}),!t.maxEntries&&!t.maxAgeSeconds)throw new r("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor"});t.maxEntries&&s.isType(t.maxEntries,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxEntries"}),t.maxAgeSeconds&&s.isType(t.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxAgeSeconds"})}this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new J(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),r=await self.caches.open(this._cacheName);for(const e of t)await r.delete(e,this._matchOptions);"production"!==process.env.NODE_ENV&&(t.length>0?(a.groupCollapsed(`Expired ${t.length} `+(1===t.length?"entry":"entries")+" and removed "+(1===t.length?"it":"them")+" from the "+`'${this._cacheName}' cache.`),a.log(`Expired the following ${1===t.length?"URL":"URLs"}:`),t.forEach((e=>a.log(`    ${e}`))),a.groupEnd()):a.debug("Cache expiration ran and found no entries to remove.")),this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,k(this.expireEntries()))}async updateTimestamp(e){"production"!==process.env.NODE_ENV&&s.isType(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"updateTimestamp",paramName:"url"}),await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),r=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<r}if("production"!==process.env.NODE_ENV)throw new r("expired-test-without-max-age",{methodName:"isURLExpired",paramName:"maxAgeSeconds"});return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}p(/\.(?:js|css)\?ver=.*$/,new class extends v{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift($)}async _handle(e,t){const n=[];"production"!==process.env.NODE_ENV&&s.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const o=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(o);let i,c=await t.cacheMatch(e);if(c)"production"!==process.env.NODE_ENV&&n.push(`Found a cached response in the '${this.cacheName}' cache. Will update with the network response in the background.`);else{"production"!==process.env.NODE_ENV&&n.push(`No response found in the '${this.cacheName}' cache. Will wait for the network response.`);try{c=await o}catch(e){e instanceof Error&&(i=e)}}if("production"!==process.env.NODE_ENV){a.groupCollapsed(x(this.constructor.name,e));for(const e of n)a.log(e);D(c),a.groupEnd()}if(!c)throw new r("no-response",{url:e.url,error:i});return c}}),p(/\.(?:woff|woff2)$/,new class extends v{async _handle(e,t){const n=[];"production"!==process.env.NODE_ENV&&s.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"makeRequest",paramName:"request"});let o,i=await t.cacheMatch(e);if(i)"production"!==process.env.NODE_ENV&&n.push(`Found a cached response in the '${this.cacheName}' cache.`);else{"production"!==process.env.NODE_ENV&&n.push(`No response found in the '${this.cacheName}' cache. Will respond with a network request.`);try{i=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(o=e)}"production"!==process.env.NODE_ENV&&(i?n.push("Got response from network."):n.push("Unable to get a response from the network."))}if("production"!==process.env.NODE_ENV){a.groupCollapsed(x(this.constructor.name,e));for(const e of n)a.log(e);D(i),a.groupEnd()}if(!i)throw new r("no-response",{url:e.url,error:o});return i}}({cacheName:"fonts",plugins:[new class{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new R(e)}}({statuses:[0,200]}),new class{constructor(e={}){if(this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:r,cachedResponse:s})=>{if(!s)return null;const n=this._isResponseDateFresh(s),o=this._getCacheExpiration(r);k(o.expireEntries());const i=o.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(t){"production"!==process.env.NODE_ENV&&"request"in e&&a.warn(`Unable to ensure service worker stays alive when updating cache entry for '${u(e.request.url)}'.`)}return n?s:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{"production"!==process.env.NODE_ENV&&(s.isType(e,"string",{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),s.isInstance(t,Request,{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"}));const r=this._getCacheExpiration(e);await r.updateTimestamp(t.url),await r.expireEntries()},"production"!==process.env.NODE_ENV){if(!e.maxEntries&&!e.maxAgeSeconds)throw new r("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor"});e.maxEntries&&s.isType(e.maxEntries,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxEntries"}),e.maxAgeSeconds&&s.isType(e.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxAgeSeconds"})}this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){"production"!==process.env.NODE_ENV&&s.isType(e,"function",{moduleName:"workbox-core",funcName:"register",paramName:"callback"}),E.add(e),"production"!==process.env.NODE_ENV&&a.log("Registered a callback to respond to quota errors.",e)}((()=>this.deleteCacheAndMetadata()))}_getCacheExpiration(e){if(e===g())throw new r("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new Y(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),r=new Date(t).getTime();return isNaN(r)?null:r}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}({maxEntries:60,maxAgeSeconds:2592e3})]})),p(/\/$/,new class extends v{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift($),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,"production"!==process.env.NODE_ENV&&this._networkTimeoutSeconds&&s.isType(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){const n=[];"production"!==process.env.NODE_ENV&&s.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});const o=[];let i;if(this._networkTimeoutSeconds){const{id:r,promise:s}=this._getTimeoutPromise({request:e,logs:n,handler:t});i=r,o.push(s)}const c=this._getNetworkPromise({timeoutId:i,request:e,logs:n,handler:t});o.push(c);const u=await t.waitUntil((async()=>await t.waitUntil(Promise.race(o))||await c)());if("production"!==process.env.NODE_ENV){a.groupCollapsed(x(this.constructor.name,e));for(const e of n)a.log(e);D(u),a.groupEnd()}if(!u)throw new r("no-response",{url:e.url});return u}_getTimeoutPromise({request:e,logs:t,handler:r}){let s;return{promise:new Promise((a=>{s=setTimeout((async()=>{"production"!==process.env.NODE_ENV&&t.push(`Timing out the network response at ${this._networkTimeoutSeconds} seconds.`),a(await r.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:r,handler:s}){let a,n;try{n=await s.fetchAndCachePut(t)}catch(e){e instanceof Error&&(a=e)}return e&&clearTimeout(e),"production"!==process.env.NODE_ENV&&(n?r.push("Got response from network."):r.push("Unable to get a response from the network. Will respond with a cached response.")),!a&&n||(n=await s.cacheMatch(t),"production"!==process.env.NODE_ENV&&(n?r.push(`Found a cached response in the '${this.cacheName}' cache.`):r.push(`No response found in the '${this.cacheName}' cache.`))),n}})}();
