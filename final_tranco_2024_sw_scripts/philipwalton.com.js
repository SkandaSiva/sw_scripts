const t={META:"meta:v1",SHELL:"shell:v1",CONTENT:"content:v1",STATIC_ASSETS:"static-assets:v1"},e=async()=>{const e=await caches.keys(),s=new Set(Object.values(t));for(const t of e)s.has(t)||await caches.delete(t)},s=async t=>{const e=await clients.matchAll({type:"window",includeUncontrolled:!0});for(const s of e)s.postMessage(t)},n="/metadata.json",a={version:"4.24.4",buildTime:"2024-09-14T03:27:40.330Z"},i=async()=>{const e=await caches.open(t.META),s=await e.match(n);return s?await s.json():{version:"0.0.0",buildTime:0}},r=async()=>{const e=await i(),s=a;return await(async()=>{const e=await caches.open(t.META);await e.put(n,new Response(JSON.stringify(a)))})(),{oldMetadata:e,newMetadata:s}};try{self["workbox:core:7.0.0"]&&_()}catch(t){}const c=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class o extends Error{constructor(t,e){super(c(t,e)),this.name=t,this.details=e}}const h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=t=>[h.prefix,t,h.suffix].filter((t=>t&&t.length>0)).join("-"),l=t=>t||u(h.precache),w=t=>t||u(h.runtime);function f(t,e){const s=e();return t.waitUntil(s),s}try{self["workbox:precaching:7.0.0"]&&_()}catch(t){}function d(t){if(!t)throw new o("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:e,url:s}=t;if(!s)throw new o("add-to-cache-list-unexpected-type",{entry:t});if(!e){const t=new URL(s,location.href);return{cacheKey:t.href,url:t.href}}const n=new URL(s,location.href),a=new URL(s,location.href);return n.searchParams.set("__WB_REVISION__",e),{cacheKey:n.href,url:a.href}}class y{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:t,state:e})=>{e&&(e.originalRequest=t)},this.cachedResponseWillBeUsed=async({event:t,state:e,cachedResponse:s})=>{if("install"===t.type&&e&&e.originalRequest&&e.originalRequest instanceof Request){const t=e.originalRequest.url;s?this.notUpdatedURLs.push(t):this.updatedURLs.push(t)}return s}}}class p{constructor({precacheController:t}){this.cacheKeyWillBeUsed=async({request:t,params:e})=>{const s=(null==e?void 0:e.cacheKey)||this.t.getCacheKeyForURL(t.url);return s?new Request(s,{headers:t.headers}):t},this.t=t}}let m;async function g(t,e){let s=null;if(t.url){s=new URL(t.url).origin}if(s!==self.location.origin)throw new o("cross-origin-copy-response",{origin:s});const n=t.clone(),a={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},i=e?e(a):a,r=function(){if(void 0===m){const t=new Response("");if("body"in t)try{new Response(t.body),m=!0}catch(t){m=!1}m=!1}return m}()?n.body:await n.blob();return new Response(r,i)}const R=t=>new URL(String(t),location.href).href.replace(new RegExp(`^${location.origin}`),"");function v(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class q{constructor(){this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}}const b=new Set;function E(t){return new Promise((e=>setTimeout(e,t)))}try{self["workbox:strategies:7.0.0"]&&_()}catch(t){}function D(t){return"string"==typeof t?new Request(t):t}class T{constructor(t,e){this.i={},Object.assign(this,e),this.event=e.event,this.o=t,this.h=new q,this.u=[],this.l=[...t.plugins],this.p=new Map;for(const t of this.l)this.p.set(t,{});this.event.waitUntil(this.h.promise)}async fetch(t){const{event:e}=this;let s=D(t);if("navigate"===s.mode&&e instanceof FetchEvent&&e.preloadResponse){const t=await e.preloadResponse;if(t)return t}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))s=await t({request:s.clone(),event:e})}catch(t){if(t instanceof Error)throw new o("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const a=s.clone();try{let t;t=await fetch(s,"navigate"===s.mode?void 0:this.o.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))t=await s({event:e,request:a,response:t});return t}catch(t){throw n&&await this.runCallbacks("fetchDidFail",{error:t,event:e,originalRequest:n.clone(),request:a.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=D(t);let s;const{cacheName:n,matchOptions:a}=this.o,i=await this.getCacheKey(e,"read"),r=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(i,r);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:a,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(t,e){const s=D(t);await E(0);const n=await this.getCacheKey(s,"write");if(!e)throw new o("cache-put-with-no-response",{url:R(n.url)});const a=await this.m(e);if(!a)return!1;const{cacheName:i,matchOptions:r}=this.o,c=await self.caches.open(i),h=this.hasCallback("cacheDidUpdate"),u=h?await async function(t,e,s,n){const a=v(e.url,s);if(e.url===a)return t.match(e,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await t.keys(e,i);for(const e of r)if(a===v(e.url,s))return t.match(e,n)}(c,n.clone(),["__WB_REVISION__"],r):null;try{await c.put(n,h?a.clone():a)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of b)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:i,oldResponse:u,newResponse:a.clone(),request:n,event:this.event});return!0}async getCacheKey(t,e){const s=`${t.url} | ${e}`;if(!this.i[s]){let n=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))n=D(await t({mode:e,request:n,event:this.event,params:this.params}));this.i[s]=n}return this.i[s]}hasCallback(t){for(const e of this.o.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.o.plugins)if("function"==typeof e[t]){const s=this.p.get(e),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return e[t](a)};yield n}}waitUntil(t){return this.u.push(t),t}async doneWaiting(){let t;for(;t=this.u.shift();)await t}destroy(){this.h.resolve(null)}async m(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class N{constructor(t={}){this.cacheName=w(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,a=new T(this,{event:e,request:s,params:n}),i=this.R(a,s,e);return[i,this.v(i,a,s,e)]}async R(t,e,s){let n;await t.runCallbacks("handlerWillStart",{event:s,request:e});try{if(n=await this.q(e,t),!n||"error"===n.type)throw new o("no-response",{url:e.url})}catch(a){if(a instanceof Error)for(const i of t.iterateCallbacks("handlerDidError"))if(n=await i({error:a,event:s,request:e}),n)break;if(!n)throw a}for(const a of t.iterateCallbacks("handlerWillRespond"))n=await a({event:s,request:e,response:n});return n}async v(t,e,s,n){let a,i;try{a=await t}catch(i){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await e.doneWaiting()}catch(t){t instanceof Error&&(i=t)}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:i}),e.destroy(),i)throw i}}class U extends N{constructor(t={}){t.cacheName=l(t.cacheName),super(t),this.D=!1!==t.fallbackToNetwork,this.plugins.push(U.copyRedirectedCacheableResponsesPlugin)}async q(t,e){const s=await e.cacheMatch(t);return s||(e.event&&"install"===e.event.type?await this._(t,e):await this.T(t,e))}async T(t,e){let s;const n=e.params||{};if(!this.D)throw new o("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{0;const a=n.integrity,i=t.integrity,r=!i||i===a;if(s=await e.fetch(new Request(t,{integrity:"no-cors"!==t.mode?i||a:void 0})),a&&r&&"no-cors"!==t.mode){this.N();await e.cachePut(t,s.clone());0}}return s}async _(t,e){this.N();const s=await e.fetch(t);if(!await e.cachePut(t,s.clone()))throw new o("bad-precaching-response",{url:t.url,status:s.status});return s}N(){let t=null,e=0;for(const[s,n]of this.plugins.entries())n!==U.copyRedirectedCacheableResponsesPlugin&&(n===U.defaultPrecacheCacheabilityPlugin&&(t=s),n.cacheWillUpdate&&e++);0===e?this.plugins.push(U.defaultPrecacheCacheabilityPlugin):e>1&&null!==t&&this.plugins.splice(t,1)}}U.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:t})=>!t||t.status>=400?null:t},U.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await g(t):t};try{self["workbox:routing:7.0.0"]&&_()}catch(t){}const I=t=>t&&"object"==typeof t?t:{handle:t};class k{constructor(t,e,s="GET"){this.handler=I(e),this.match=t,this.method=s}setCatchHandler(t){this.catchHandler=I(t)}}class x extends N{async q(t,e){let s,n=await e.cacheMatch(t);if(n)0;else{0;try{n=await e.fetchAndCachePut(t)}catch(t){t instanceof Error&&(s=t)}0}if(!n)throw new o("no-response",{url:t.url,error:s});return n}}const L={async handlerDidError({error:t,event:e,request:s}){if("fetch"===e.type)return new Response(["<h3>Error:</h3>",`<p>There was an error requesting URL: <em>${s.url}</em>.</p>`,"<p>Ensure you're still connected to the internet and not using any ","plugins (e.g. adblock, ublock) that might block this request.</p>",`<pre>${t.stack||t}</pre>`,`<script type="module">\n          if (self.__e) {\n            (self.__e.q = self.__e.q || []).push({\n              type: 'error',\n              error: {\n                name: ${JSON.stringify(t.name)},\n                stack: ${JSON.stringify(t.stack)},\n              }\n            });\n          }\n          async function updateSW() {\n            const reg = await navigator.serviceWorker.getRegistration();\n            reg.update();\n          }\n          updateSW();\n        <\/script>`].join(""),{status:404})}},S=new class{constructor({cacheName:t,plugins:e=[],fallbackToNetwork:s=!0}={}){this.U=new Map,this.I=new Map,this.k=new Map,this.o=new U({cacheName:l(t),plugins:[...e,new p({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.o}precache(t){this.addToCacheList(t),this.L||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.L=!0)}addToCacheList(t){const e=[];for(const s of t){"string"==typeof s?e.push(s):s&&void 0===s.revision&&e.push(s.url);const{cacheKey:t,url:n}=d(s),a="string"!=typeof s&&s.revision?"reload":"default";if(this.U.has(n)&&this.U.get(n)!==t)throw new o("add-to-cache-list-conflicting-entries",{firstEntry:this.U.get(n),secondEntry:t});if("string"!=typeof s&&s.integrity){if(this.k.has(t)&&this.k.get(t)!==s.integrity)throw new o("add-to-cache-list-conflicting-integrities",{url:n});this.k.set(t,s.integrity)}if(this.U.set(n,t),this.I.set(n,a),e.length>0){const t=`Workbox is precaching URLs without revision info: ${e.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}install(t){return f(t,(async()=>{const e=new y;this.strategy.plugins.push(e);for(const[e,s]of this.U){const n=this.k.get(s),a=this.I.get(e),i=new Request(e,{integrity:n,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:t}))}const{updatedURLs:s,notUpdatedURLs:n}=e;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(t){return f(t,(async()=>{const t=await self.caches.open(this.strategy.cacheName),e=await t.keys(),s=new Set(this.U.values()),n=[];for(const a of e)s.has(a.url)||(await t.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this.U}getCachedURLs(){return[...this.U.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this.U.get(e.href)}getIntegrityForCacheKey(t){return this.k.get(t)}async matchPrecache(t){const e=t instanceof Request?t.url:t,s=this.getCacheKeyForURL(e);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(t){const e=this.getCacheKeyForURL(t);if(!e)throw new o("non-precached-url",{url:t});return s=>(s.request=new Request(t),s.params=Object.assign({cacheKey:e},s.params),this.strategy.handle(s))}}({cacheName:t.SHELL}),B=({url:t})=>Boolean(S.getCacheKeyForURL(t.href)),C=new x({cacheName:t.SHELL,plugins:[L]}),O=({request:t,event:e})=>{const s=S.getCacheKeyForURL(t.url);return C.handle({request:new Request(s),event:e})},P=S.install,A=S.activate;class W{constructor(){this.S=new Map,this.B=new Map}get routes(){return this.S}addFetchListener(){self.addEventListener("fetch",(t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data;0;const s=Promise.all(e.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})})));t.waitUntil(s),t.ports&&t.ports[0]&&s.then((()=>t.ports[0].postMessage(!0)))}}))}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return void 0;const n=s.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let r=i&&i.handler;const c=t.method;if(!r&&this.B.has(c)&&(r=this.B.get(c)),!r)return void 0;let o;try{o=r.handle({url:s,request:t,event:e,params:a})}catch(t){o=Promise.reject(t)}const h=i&&i.catchHandler;return o instanceof Promise&&(this.C||h)&&(o=o.catch((async n=>{if(h){0;try{return await h.handle({url:s,request:t,event:e,params:a})}catch(t){t instanceof Error&&(n=t)}}if(this.C)return this.C.handle({url:s,request:t,event:e});throw n}))),o}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const a=this.S.get(s.method)||[];for(const i of a){let a;const r=i.match({url:t,sameOrigin:e,request:s,event:n});if(r)return a=r,(Array.isArray(a)&&0===a.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(a=void 0),{route:i,params:a}}return{}}setDefaultHandler(t,e="GET"){this.B.set(e,I(t))}setCatchHandler(t){this.C=I(t)}registerRoute(t){this.S.has(t.method)||this.S.set(t.method,[]),this.S.get(t.method).push(t)}unregisterRoute(t){if(!this.S.has(t.method))throw new o("unregister-route-but-not-found-with-method",{method:t.method});const e=this.S.get(t.method).indexOf(t);if(!(e>-1))throw new o("unregister-route-route-not-registered");this.S.get(t.method).splice(e,1)}}function M(t){t.then((()=>{}))}async function j(t){if(!t)return;let e=await self.clients.matchAll({type:"window"});const s=new Set(e.map((t=>t.id)));let n;const a=performance.now();for(;performance.now()-a<2e3&&(e=await self.clients.matchAll({type:"window"}),n=e.find((e=>t?e.id===t:!s.has(e.id))),!n);)await E(100);return n}try{self["workbox:broadcast-update:7.0.0"]&&_()}catch(t){}const F=["content-length","etag","last-modified"],K=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);function $(t){return{cacheName:t.cacheName,updatedURL:t.request.url}}class H{constructor({generatePayload:t,headersToCheck:e,notifyAllClients:s}={}){this.O=e||F,this.P=t||$,this.A=null==s||s}async notifyIfUpdated(t){var e,s,n;if(t.oldResponse&&(e=t.oldResponse,s=t.newResponse,(n=this.O).some((t=>e.headers.has(t)&&s.headers.has(t)))&&!n.every((t=>{const n=e.headers.has(t)===s.headers.has(t),a=e.headers.get(t)===s.headers.get(t);return n&&a})))){0;const e={type:"CACHE_UPDATED",meta:"workbox-broadcast-update",payload:this.P(t)};if("navigate"===t.request.mode){let e;t.event instanceof FetchEvent&&(e=t.event.resultingClientId);await j(e)&&!K||await E(3500)}if(this.A){const t=await self.clients.matchAll({type:"window"});for(const s of t)s.postMessage(e)}else if(t.event instanceof FetchEvent){const s=await self.clients.get(t.event.clientId);null==s||s.postMessage(e)}}}}const G={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null};const Q=new class{constructor(t){this.cacheDidUpdate=async t=>{M(this.W.notifyIfUpdated(t))},this.W=new H(t)}}({generatePayload:t=>({cacheName:t.cacheName,updatedURL:t.request.url})}),J={async cachedResponseWillBeUsed({cachedResponse:t,event:e}){if(e&&e.request&&"navigate"===e.request.mode){const{resultingClientId:n}=e;j(n).then((async n=>{var a;n||await(a=3e3,new Promise((t=>setTimeout(t,a)))),s({type:"NAVIGATION_REPORT",payload:{url:e.request.url,cacheHit:Boolean(t)}})}))}return t}},V={async cacheWillUpdate({response:t}){if(t.url&&t.ok&&t.status<400)return g(t,(t=>(t.headers.set("X-Cache-Date",(new Date).toUTCString()),t)))}},z=({url:t})=>t.hostname===location.hostname&&t.pathname.endsWith("_index"),X=new class extends N{constructor(t={}){super(t),this.plugins.some((t=>"cacheWillUpdate"in t))||this.plugins.unshift(G)}async q(t,e){const s=e.fetchAndCachePut(t).catch((()=>{}));e.waitUntil(s);let n,a=await e.cacheMatch(t);if(a)0;else{0;try{a=await s}catch(t){t instanceof Error&&(n=t)}}if(!a)throw new o("no-response",{url:t.url,error:n});return a}}({cacheName:t.CONTENT,plugins:[L,V,Q,J]});try{self["workbox:streams:7.0.0"]&&_()}catch(t){}function Z(t={}){const e=new Headers(t);return e.has("content-type")||e.set("content-type","text/html"),e}function Y(t){const e=t.map((t=>Promise.resolve(t).then((t=>function(t){if(t instanceof Response){if(t.body)return t.body.getReader();throw new o("opaque-streams-source",{type:t.type})}return t instanceof ReadableStream?t.getReader():new Response(t).body.getReader()}(t))))),s=new q;let n=0;const a=new ReadableStream({pull(t){return e[n].then((t=>t instanceof ReadableStreamDefaultReader?t.read():void 0)).then((a=>{if(null==a?void 0:a.done)return n++,n>=e.length?(t.close(),void s.resolve()):this.pull(t);t.enqueue(null==a?void 0:a.value)})).catch((t=>{throw s.reject(t),t}))},cancel(){s.resolve()}});return{done:s.promise,stream:a}}let tt;function et(){return function(){if(void 0===tt)try{new ReadableStream({start(){}}),tt=!0}catch(t){tt=!1}return tt}()}const st=({url:t})=>t.hostname===location.hostname&&("/"===t.pathname||t.pathname.match(/^\/(?:about|articles)\/([\w-]+\/)?$/)),nt=({event:t,url:e})=>X.handle({request:new Request(`${e.pathname}_index`),event:t}),at=(it=[({event:t})=>O({request:new Request("/shell-start"),event:t}),nt,({event:t})=>O({request:new Request("/shell-end"),event:t})],async({event:t,request:e,url:s,params:n})=>{const a=it.map((a=>Promise.resolve(a({event:t,request:e,url:s,params:n}))));if(et()){const{done:e,response:s}=function(t,e){const{done:s,stream:n}=Y(t),a=Z(e);return{done:s,response:new Response(n,{headers:a})}}(a,rt);return t&&t.waitUntil(e),s}const i=a.map((async t=>{const e=await t;return e instanceof Response?e.blob():new Response(e).blob()})),r=await Promise.all(i),c=Z(rt);return new Response(new Blob(r),{headers:c})});var it,rt;const ct=t=>t.request&&"navigate"===t.request.mode?at(t):nt(t);const ot=(t,e)=>e.some((e=>t instanceof e));let ht,ut;const lt=new WeakMap,wt=new WeakMap,ft=new WeakMap,dt=new WeakMap,yt=new WeakMap;let pt={get(t,e,s){if(t instanceof IDBTransaction){if("done"===e)return wt.get(t);if("objectStoreNames"===e)return t.objectStoreNames||ft.get(t);if("store"===e)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return Rt(t[e])},set:(t,e,s)=>(t[e]=s,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function mt(t){return t!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(ut||(ut=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(vt(this),e),Rt(lt.get(this))}:function(...e){return Rt(t.apply(vt(this),e))}:function(e,...s){const n=t.call(vt(this),e,...s);return ft.set(n,e.sort?e.sort():[e]),Rt(n)}}function gt(t){return"function"==typeof t?mt(t):(t instanceof IDBTransaction&&function(t){if(wt.has(t))return;const e=new Promise(((e,s)=>{const n=()=>{t.removeEventListener("complete",a),t.removeEventListener("error",i),t.removeEventListener("abort",i)},a=()=>{e(),n()},i=()=>{s(t.error||new DOMException("AbortError","AbortError")),n()};t.addEventListener("complete",a),t.addEventListener("error",i),t.addEventListener("abort",i)}));wt.set(t,e)}(t),ot(t,ht||(ht=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(t,pt):t)}function Rt(t){if(t instanceof IDBRequest)return function(t){const e=new Promise(((e,s)=>{const n=()=>{t.removeEventListener("success",a),t.removeEventListener("error",i)},a=()=>{e(Rt(t.result)),n()},i=()=>{s(t.error),n()};t.addEventListener("success",a),t.addEventListener("error",i)}));return e.then((e=>{e instanceof IDBCursor&&lt.set(e,t)})).catch((()=>{})),yt.set(e,t),e}(t);if(dt.has(t))return dt.get(t);const e=gt(t);return e!==t&&(dt.set(t,e),yt.set(e,t)),e}const vt=t=>yt.get(t);function qt(t,e,{blocked:s,upgrade:n,blocking:a,terminated:i}={}){const r=indexedDB.open(t,e),c=Rt(r);return n&&r.addEventListener("upgradeneeded",(t=>{n(Rt(r.result),t.oldVersion,t.newVersion,Rt(r.transaction),t)})),s&&r.addEventListener("blocked",(t=>s(t.oldVersion,t.newVersion,t))),c.then((t=>{i&&t.addEventListener("close",(()=>i())),a&&t.addEventListener("versionchange",(t=>a(t.oldVersion,t.newVersion,t)))})).catch((()=>{})),c}const bt=["get","getKey","getAll","getAllKeys","count"],Et=["put","add","delete","clear"],Dt=new Map;function _t(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(Dt.get(e))return Dt.get(e);const s=e.replace(/FromIndex$/,""),n=e!==s,a=Et.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!bt.includes(s))return;const i=async function(t,...e){const i=this.transaction(t,a?"readwrite":"readonly");let r=i.store;return n&&(r=r.index(e.shift())),(await Promise.all([r[s](...e),a&&i.done]))[0]};return Dt.set(e,i),i}pt=(t=>({...t,get:(e,s,n)=>_t(e,s)||t.get(e,s,n),has:(e,s)=>!!_t(e,s)||t.has(e,s)}))(pt);try{self["workbox:expiration:7.0.0"]&&_()}catch(t){}const Tt="cache-entries",Nt=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class Ut{constructor(t){this.M=null,this.j=t}F(t){const e=t.createObjectStore(Tt,{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}K(t){this.F(t),this.j&&function(t,{blocked:e}={}){const s=indexedDB.deleteDatabase(t);e&&s.addEventListener("blocked",(t=>e(t.oldVersion,t))),Rt(s).then((()=>{}))}(this.j)}async setTimestamp(t,e){const s={url:t=Nt(t),timestamp:e,cacheName:this.j,id:this.$(t)},n=(await this.getDb()).transaction(Tt,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(t){const e=await this.getDb(),s=await e.get(Tt,this.$(t));return null==s?void 0:s.timestamp}async expireEntries(t,e){const s=await this.getDb();let n=await s.transaction(Tt).store.index("timestamp").openCursor(null,"prev");const a=[];let i=0;for(;n;){const s=n.value;s.cacheName===this.j&&(t&&s.timestamp<t||e&&i>=e?a.push(n.value):i++),n=await n.continue()}const r=[];for(const t of a)await s.delete(Tt,t.id),r.push(t.url);return r}$(t){return this.j+"|"+Nt(t)}async getDb(){return this.M||(this.M=await qt("workbox-expiration",1,{upgrade:this.K.bind(this)})),this.M}}class It{constructor(t,e={}){this.H=!1,this.G=!1,this.J=e.maxEntries,this.V=e.maxAgeSeconds,this.X=e.matchOptions,this.j=t,this.Z=new Ut(t)}async expireEntries(){if(this.H)return void(this.G=!0);this.H=!0;const t=this.V?Date.now()-1e3*this.V:0,e=await this.Z.expireEntries(t,this.J),s=await self.caches.open(this.j);for(const t of e)await s.delete(t,this.X);this.H=!1,this.G&&(this.G=!1,M(this.expireEntries()))}async updateTimestamp(t){await this.Z.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.V){const e=await this.Z.getTimestamp(t),s=Date.now()-1e3*this.V;return void 0===e||e<s}return!1}async delete(){this.G=!1,await this.Z.expireEntries(1/0)}}const kt=({url:t})=>t.hostname===location.hostname&&t.pathname.startsWith("/static/"),xt=new x({cacheName:t.STATIC_ASSETS,plugins:[new class{constructor(t={}){this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this.Y(n),i=this.tt(s);M(i.expireEntries());const r=i.updateTimestamp(e.url);if(t)try{t.waitUntil(r)}catch(t){0}return a?n:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const s=this.tt(t);await s.updateTimestamp(e.url),await s.expireEntries()},this.et=t,this.V=t.maxAgeSeconds,this.st=new Map,t.purgeOnQuotaError&&function(t){b.add(t)}((()=>this.deleteCacheAndMetadata()))}tt(t){if(t===w())throw new o("expire-custom-caches-only");let e=this.st.get(t);return e||(e=new It(t,this.et),this.st.set(t,e)),e}Y(t){if(!this.V)return!0;const e=this.nt(t);if(null===e)return!0;return e>=Date.now()-1e3*this.V}nt(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),s=new Date(e).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[t,e]of this.st)await self.caches.delete(t),await e.delete();this.st=new Map}}({maxEntries:100})]});try{self["workbox:background-sync:7.0.0"]&&_()}catch(t){}const Lt="requests",St="queueName";class Bt{constructor(){this.M=null}async addEntry(t){const e=(await this.getDb()).transaction(Lt,"readwrite",{durability:"relaxed"});await e.store.add(t),await e.done}async getFirstEntryId(){const t=await this.getDb(),e=await t.transaction(Lt).store.openCursor();return null==e?void 0:e.value.id}async getAllEntriesByQueueName(t){const e=await this.getDb(),s=await e.getAllFromIndex(Lt,St,IDBKeyRange.only(t));return s||new Array}async getEntryCountByQueueName(t){return(await this.getDb()).countFromIndex(Lt,St,IDBKeyRange.only(t))}async deleteEntry(t){const e=await this.getDb();await e.delete(Lt,t)}async getFirstEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"next")}async getLastEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"prev")}async getEndEntryFromIndex(t,e){const s=await this.getDb(),n=await s.transaction(Lt).store.index(St).openCursor(t,e);return null==n?void 0:n.value}async getDb(){return this.M||(this.M=await qt("workbox-background-sync",3,{upgrade:this.F})),this.M}F(t,e){e>0&&e<3&&t.objectStoreNames.contains(Lt)&&t.deleteObjectStore(Lt);t.createObjectStore(Lt,{autoIncrement:!0,keyPath:"id"}).createIndex(St,St,{unique:!1})}}class Ct{constructor(t){this.it=t,this.rt=new Bt}async pushEntry(t){delete t.id,t.queueName=this.it,await this.rt.addEntry(t)}async unshiftEntry(t){const e=await this.rt.getFirstEntryId();e?t.id=e-1:delete t.id,t.queueName=this.it,await this.rt.addEntry(t)}async popEntry(){return this.ct(await this.rt.getLastEntryByQueueName(this.it))}async shiftEntry(){return this.ct(await this.rt.getFirstEntryByQueueName(this.it))}async getAll(){return await this.rt.getAllEntriesByQueueName(this.it)}async size(){return await this.rt.getEntryCountByQueueName(this.it)}async deleteEntry(t){await this.rt.deleteEntry(t)}async ct(t){return t&&await this.deleteEntry(t.id),t}}const Ot=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class Pt{static async fromRequest(t){const e={url:t.url,headers:{}};"GET"!==t.method&&(e.body=await t.clone().arrayBuffer());for(const[s,n]of t.headers.entries())e.headers[s]=n;for(const s of Ot)void 0!==t[s]&&(e[s]=t[s]);return new Pt(e)}constructor(t){"navigate"===t.mode&&(t.mode="same-origin"),this.ot=t}toObject(){const t=Object.assign({},this.ot);return t.headers=Object.assign({},this.ot.headers),t.body&&(t.body=t.body.slice(0)),t}toRequest(){return new Request(this.ot.url,this.ot)}clone(){return new Pt(this.toObject())}}const At="workbox-background-sync",Wt=new Set,Mt=t=>{const e={request:new Pt(t.requestData).toRequest(),timestamp:t.timestamp};return t.metadata&&(e.metadata=t.metadata),e};class jt{constructor(t,{forceSyncFallback:e,onSync:s,maxRetentionTime:n}={}){if(this.ht=!1,this.ut=!1,Wt.has(t))throw new o("duplicate-queue-name",{name:t});Wt.add(t),this.lt=t,this.wt=s||this.replayRequests,this.ft=n||10080,this.dt=Boolean(e),this.yt=new Ct(this.lt),this.gt()}get name(){return this.lt}async pushRequest(t){await this.Rt(t,"push")}async unshiftRequest(t){await this.Rt(t,"unshift")}async popRequest(){return this.vt("pop")}async shiftRequest(){return this.vt("shift")}async getAll(){const t=await this.yt.getAll(),e=Date.now(),s=[];for(const n of t){const t=60*this.ft*1e3;e-n.timestamp>t?await this.yt.deleteEntry(n.id):s.push(Mt(n))}return s}async size(){return await this.yt.size()}async Rt({request:t,metadata:e,timestamp:s=Date.now()},n){const a={requestData:(await Pt.fromRequest(t.clone())).toObject(),timestamp:s};switch(e&&(a.metadata=e),n){case"push":await this.yt.pushEntry(a);break;case"unshift":await this.yt.unshiftEntry(a)}this.ht?this.ut=!0:await this.registerSync()}async vt(t){const e=Date.now();let s;switch(t){case"pop":s=await this.yt.popEntry();break;case"shift":s=await this.yt.shiftEntry()}if(s){const n=60*this.ft*1e3;return e-s.timestamp>n?this.vt(t):Mt(s)}}async replayRequests(){let t;for(;t=await this.shiftRequest();)try{await fetch(t.request.clone())}catch(e){throw await this.unshiftRequest(t),new o("queue-replay-failed",{name:this.lt})}}async registerSync(){if("sync"in self.registration&&!this.dt)try{await self.registration.sync.register(`${At}:${this.lt}`)}catch(t){0}}gt(){"sync"in self.registration&&!this.dt?self.addEventListener("sync",(t=>{if(t.tag===`${At}:${this.lt}`){0;const e=async()=>{let e;this.ht=!0;try{await this.wt({queue:this})}catch(t){if(t instanceof Error)throw e=t,e}finally{!this.ut||e&&!t.lastChance||await this.registerSync(),this.ht=!1,this.ut=!1}};t.waitUntil(e())}})):this.wt({queue:this})}static get qt(){return Wt}}const Ft=({url:t})=>t.hostname===location.hostname&&"/log"===t.pathname,Kt=new class extends N{constructor(t={}){super(t),this.bt=t.networkTimeoutSeconds||0}async q(t,e){let s,n;try{const s=[e.fetch(t)];if(this.bt){const t=E(1e3*this.bt);s.push(t)}if(n=await Promise.race(s),!n)throw new Error(`Timed out the network response after ${this.bt} seconds.`)}catch(t){t instanceof Error&&(s=t)}if(!n)throw new o("no-response",{url:t.url,error:s});return n}}({plugins:[new class{constructor(t,e){this.fetchDidFail=async({request:t})=>{await this.Et.pushRequest({request:t})},this.Et=new jt(t,e)}}("log",{maxRetentionTime:5760,async onSync({queue:t}){let e;for(;e=await t.shiftRequest();){const{request:s}=e;try{let t;const e=(await s.clone().text()).split(/\n/).map((e=>{const s=new URLSearchParams(e);if(!t){const e=Number(s.get("epn.time_origin")),n=Number(s.get("epn.page_time"));t=e&&n&&Math.round(e+n)}return s.set("ep.sw_replay",!0),s.toString()})).join("\n"),n=new URL(s.url);t&&n.searchParams.set("ht",t),await fetch(new Request(n,{body:e,method:"POST"}))}catch(s){throw await t.unshiftRequest(e),s}}}})]}),$t={createPrecacheRoute:()=>new k(B,O)},Ht={createStaticAssetsRoute:()=>new k(kt,xt),createContentRoute:()=>new k(z,X),createPagesRoute:()=>new k(st,ct)},Gt={createLogRoute:()=>new k(Ft,Kt,"POST")},Qt=(t,e)=>{for(const s of Object.values(e))t.registerRoute(s())};let Jt;S.addToCacheList([{url:"/shell-start",revision:"40058bb8ce"},{url:"/shell-end",revision:"2f1dec7894"}]),(()=>{const t=new W;Qt(t,$t),t.addFetchListener();const e=new W;Qt(e,Ht),e.addFetchListener(),e.addCacheListener();const s=new W;Qt(s,Gt),s.addFetchListener()})(),addEventListener("install",(t=>{skipWaiting();t.waitUntil((async()=>{await P(t),Jt=await r()})())})),addEventListener("activate",(t=>{clients.claim();t.waitUntil((async()=>{Jt&&await s({type:"UPDATE_AVAILABLE",payload:Jt}),await Promise.all([A(t),e()])})())})),addEventListener("message",(t=>{if(t.data&&"GET_METADATA"===t.data.type){const e=async()=>{const e=await i();t.ports&&t.ports[0].postMessage(e)};t.waitUntil(e())}}));
