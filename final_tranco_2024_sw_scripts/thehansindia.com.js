var version = "v2.0.3";  var swPath;  var urlObject = new URL(location);  var host;  if (urlObject.searchParams.get("swPath")) {      swPath = urlObject.searchParams.get("swPath");  }  else {      if (urlObject.searchParams.get("version")) {          version = urlObject.searchParams.get("version");      }      if (urlObject.searchParams.get("swJSHost")) {          host = "https://" + urlObject.searchParams.get("swJSHost");      }      else {          host = "https://sdki.truepush.com/sdk/";      }      swPath = host + version + "/sw.js";  }  importScripts(swPath);          const versionMain = '4.0.'+new Date().getUTCDate();  const CACHE_NAME = 'hans-pwa-v0-'+versionMain;  const CACHE_FILES = ['/','/offline'];  const CACHE_HOSTS = ['www.thehansindia.com','assets.thehansindia.com','localhost'];    self.addEventListener('install', function(event) {    event.waitUntil(      caches.open(CACHE_NAME).then(function(cache) {        return cache.addAll(CACHE_FILES);      })    );  });    self.addEventListener('activate', function(e) {      e.waitUntil(          Promise.all([              self.clients.claim(),              caches.keys().then(function(cacheNames) {                  return Promise.all(                      cacheNames.map(function(cacheName) {                          if (cacheName !== CACHE_NAME) {                              return caches.delete(cacheName);                          }                      })                  );              })          ])      );  });    self.addEventListener('fetch', function(event) {      const url = new URL(event.request.url);                if(!navigator.onLine){                 event.respondWith(              caches.match(event.request).then(function(response) {                return response || fetch('/offline');              }));             }else if (event.request.method === 'GET' && CACHE_HOSTS.indexOf(url.hostname) !== -1) {                   if (CACHE_HOSTS.indexOf(url.hostname) !== -1) {                           event.respondWith(                  caches.open(CACHE_NAME).then(function(cache) {                    return fetch(event.request).then(function(response) {                      cache.put(event.request, response.clone());                      return response;                    });                  })              );          }      }  });