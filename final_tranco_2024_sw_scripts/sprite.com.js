self.addEventListener("install",(()=>{self.skipWaiting()})),self.addEventListener("activate",(function(t){t.waitUntil(self.clients.claim())})),self.addEventListener("push",(t=>{const{title:i,body:e,icon:n,image:a,badge:s,data:o,actions:c,tag:r,renotify:d,requireInteraction:l}=t.data.json(),p={body:e,icon:n,image:a,badge:s,data:o,actions:c,tag:r,renotify:d,requireInteraction:l};o.rawData&&console.debug("Service worker received data",JSON.stringify(o.rawData)),t.waitUntil(self.registration.showNotification(i,p))})),self.addEventListener("notificationclick",(t=>{t.notification.close();const i=t.action||t.notification.data.url;if(i){const e=new URL(i);e.searchParams.toString().includes("utm_")||(e.searchParams.append("utm_source","crm_w"),e.searchParams.append("utm_medium","OWeb"),e.searchParams.append("utm_content","push"),e.searchParams.append("utm_term",t.action?"cta-button":"default-link")),t.waitUntil(clients.openWindow(e.toString()))}})),self.addEventListener("pushsubscriptionchange",(t=>{const i=fetch("/api/notifications/v1/telemetry",{method:"post",headers:{"Content-type":"application/json"},body:JSON.stringify({info:"Receiving push subscription change event",oldSubscription:t.oldSubscription,newSubscription:t.newSubscription})});t.waitUntil(i)}));