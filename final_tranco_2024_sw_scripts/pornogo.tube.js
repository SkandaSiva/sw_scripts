const a="static-v22",expectedCaches=[a];self.addEventListener("install",e=>{self.skipWaiting(),e.waitUntil(async function(){caches.open(a).then(e=>e.addAll(["/files/html/offline.v1.html","/files/html/error.v2.html","/style/style.v7.css","/style/images/logo.png","/style/pornomain.v1.js"]))}())}),self.addEventListener("activate",e=>{e.waitUntil(async function(){self.registration.navigationPreload&&await self.registration.navigationPreload.enable(),caches.keys().then(e=>Promise.all(e.map(e=>{if(!expectedCaches.includes(e))return caches.delete(e)})))}())}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url);t.origin!==location.origin||/(\/view)/.test(t.pathname)||e.respondWith(async function(){const t=await caches.match(e.request);if(t)return t;try{const t=await e.preloadResponse;return t||await fetch(e.request)}catch(e){return navigator.onLine?caches.match("/files/html/error.v2.html"):caches.match("/files/html/offline.v1.html")}}())});