try{self["workbox:core:7.0.0"]&&_()}catch(t){}const t=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class e extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:7.0.0"]&&_()}catch(t){}const s=t=>t&&"object"==typeof t?t:{handle:t};class n{constructor(t,e,n="GET"){this.handler=s(e),this.match=t,this.method=n}setCatchHandler(t){this.catchHandler=s(t)}}class r extends n{constructor(t,e,s){super((({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)}),e,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})})));t.waitUntil(s),t.ports&&t.ports[0]&&s.then((()=>t.ports[0].postMessage(!0)))}}))}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:r,route:a}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let i=a&&a.handler;const o=t.method;if(!i&&this.i.has(o)&&(i=this.i.get(o)),!i)return;let c;try{c=i.handle({url:s,request:t,event:e,params:r})}catch(t){c=Promise.reject(t)}const h=a&&a.catchHandler;return c instanceof Promise&&(this.o||h)&&(c=c.catch((async n=>{if(h)try{return await h.handle({url:s,request:t,event:e,params:r})}catch(t){t instanceof Error&&(n=t)}if(this.o)return this.o.handle({url:s,request:t,event:e});throw n}))),c}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const r=this.t.get(s.method)||[];for(const a of r){let r;const i=a.match({url:t,sameOrigin:e,request:s,event:n});if(i)return r=i,(Array.isArray(r)&&0===r.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(r=void 0),{route:a,params:r}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,s(t))}setCatchHandler(t){this.o=s(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this.t.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this.t.get(t.method).splice(s,1)}}let i;const o=()=>(i||(i=new a,i.addFetchListener(),i.addCacheListener()),i);function c(t,s,a){let i;if("string"==typeof t){const e=new URL(t,location.href);i=new n((({url:t})=>t.href===e.href),s,a)}else if(t instanceof RegExp)i=new r(t,s,a);else if("function"==typeof t)i=new n(t,s,a);else{if(!(t instanceof n))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=t}return o().registerRoute(i),i}try{self["workbox:strategies:7.0.0"]&&_()}catch(t){}const h={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null},u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=t=>[u.prefix,t,u.suffix].filter((t=>t&&t.length>0)).join("-"),f=t=>{(t=>{for(const e of Object.keys(u))t(e)})((e=>{"string"==typeof t[e]&&(u[e]=t[e])}))},w=t=>t||l(u.googleAnalytics),d=t=>t||l(u.runtime);function y(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class p{constructor(){this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}}const m=new Set;function g(t){return new Promise((e=>setTimeout(e,t)))}function q(t){return"string"==typeof t?new Request(t):t}class b{constructor(t,e){this.h={},Object.assign(this,e),this.event=e.event,this.u=t,this.l=new p,this.p=[],this.m=[...t.plugins],this.g=new Map;for(const t of this.m)this.g.set(t,{});this.event.waitUntil(this.l.promise)}async fetch(t){const{event:s}=this;let n=q(t);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const t=await s.preloadResponse;if(t)return t}const r=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))n=await t({request:n.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const a=n.clone();try{let t;t=await fetch(n,"navigate"===n.mode?void 0:this.u.fetchOptions);for(const e of this.iterateCallbacks("fetchDidSucceed"))t=await e({event:s,request:a,response:t});return t}catch(t){throw r&&await this.runCallbacks("fetchDidFail",{error:t,event:s,originalRequest:r.clone(),request:a.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=q(t);let s;const{cacheName:n,matchOptions:r}=this.u,a=await this.getCacheKey(e,"read"),i=Object.assign(Object.assign({},r),{cacheName:n});s=await caches.match(a,i);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:r,cachedResponse:s,request:a,event:this.event})||void 0;return s}async cachePut(t,s){const n=q(t);await g(0);const r=await this.getCacheKey(n,"write");if(!s)throw new e("cache-put-with-no-response",{url:(a=r.url,new URL(String(a),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var a;const i=await this.q(s);if(!i)return!1;const{cacheName:o,matchOptions:c}=this.u,h=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),l=u?await async function(t,e,s,n){const r=y(e.url,s);if(e.url===r)return t.match(e,n);const a=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await t.keys(e,a);for(const e of i)if(r===y(e.url,s))return t.match(e,n)}(h,r.clone(),["__WB_REVISION__"],c):null;try{await h.put(r,u?i.clone():i)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of m)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:o,oldResponse:l,newResponse:i.clone(),request:r,event:this.event});return!0}async getCacheKey(t,e){const s=`${t.url} | ${e}`;if(!this.h[s]){let n=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))n=q(await t({mode:e,request:n,event:this.event,params:this.params}));this.h[s]=n}return this.h[s]}hasCallback(t){for(const e of this.u.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.u.plugins)if("function"==typeof e[t]){const s=this.g.get(e),n=n=>{const r=Object.assign(Object.assign({},n),{state:s});return e[t](r)};yield n}}waitUntil(t){return this.p.push(t),t}async doneWaiting(){let t;for(;t=this.p.shift();)await t}destroy(){this.l.resolve(null)}async q(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class v{constructor(t={}){this.cacheName=d(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,r=new b(this,{event:e,request:s,params:n}),a=this.v(r,s,e);return[a,this.R(a,r,s,e)]}async v(t,s,n){let r;await t.runCallbacks("handlerWillStart",{event:n,request:s});try{if(r=await this.D(s,t),!r||"error"===r.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const a of t.iterateCallbacks("handlerDidError"))if(r=await a({error:e,event:n,request:s}),r)break;if(!r)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))r=await e({event:n,request:s,response:r});return r}async R(t,e,s,n){let r,a;try{r=await t}catch(a){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:r}),await e.doneWaiting()}catch(t){t instanceof Error&&(a=t)}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:r,error:a}),e.destroy(),a)throw a}}class E extends v{constructor(t={}){super(t),this.plugins.some((t=>"cacheWillUpdate"in t))||this.plugins.unshift(h)}async D(t,s){const n=s.fetchAndCachePut(t).catch((()=>{}));s.waitUntil(n);let r,a=await s.cacheMatch(t);if(a);else try{a=await n}catch(t){t instanceof Error&&(r=t)}if(!a)throw new e("no-response",{url:t.url,error:r});return a}}class R extends v{constructor(t={}){super(t),this.I=t.networkTimeoutSeconds||0}async D(t,s){let n,r;try{const e=[s.fetch(t)];if(this.I){const t=g(1e3*this.I);e.push(t)}if(r=await Promise.race(e),!r)throw new Error(`Timed out the network response after ${this.I} seconds.`)}catch(t){t instanceof Error&&(n=t)}if(!r)throw new e("no-response",{url:t.url,error:n});return r}}function D(){return D=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},D.apply(this,arguments)}let I,x;const B=new WeakMap,O=new WeakMap,k=new WeakMap,T=new WeakMap,j=new WeakMap;let S={get(t,e,s){if(t instanceof IDBTransaction){if("done"===e)return O.get(t);if("objectStoreNames"===e)return t.objectStoreNames||k.get(t);if("store"===e)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return C(t[e])},set:(t,e,s)=>(t[e]=s,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function N(t){return t!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(x||(x=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(U(this),e),C(B.get(this))}:function(...e){return C(t.apply(U(this),e))}:function(e,...s){const n=t.call(U(this),e,...s);return k.set(n,e.sort?e.sort():[e]),C(n)}}function P(t){return"function"==typeof t?N(t):(t instanceof IDBTransaction&&function(t){if(O.has(t))return;const e=new Promise(((e,s)=>{const n=()=>{t.removeEventListener("complete",r),t.removeEventListener("error",a),t.removeEventListener("abort",a)},r=()=>{e(),n()},a=()=>{s(t.error||new DOMException("AbortError","AbortError")),n()};t.addEventListener("complete",r),t.addEventListener("error",a),t.addEventListener("abort",a)}));O.set(t,e)}(t),e=t,(I||(I=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((t=>e instanceof t))?new Proxy(t,S):t);var e}function C(t){if(t instanceof IDBRequest)return function(t){const e=new Promise(((e,s)=>{const n=()=>{t.removeEventListener("success",r),t.removeEventListener("error",a)},r=()=>{e(C(t.result)),n()},a=()=>{s(t.error),n()};t.addEventListener("success",r),t.addEventListener("error",a)}));return e.then((e=>{e instanceof IDBCursor&&B.set(e,t)})).catch((()=>{})),j.set(e,t),e}(t);if(T.has(t))return T.get(t);const e=P(t);return e!==t&&(T.set(t,e),j.set(e,t)),e}const U=t=>j.get(t);const W=["get","getKey","getAll","getAllKeys","count"],A=["put","add","delete","clear"],M=new Map;function F(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(M.get(e))return M.get(e);const s=e.replace(/FromIndex$/,""),n=e!==s,r=A.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!r&&!W.includes(s))return;const a=async function(t,...e){const a=this.transaction(t,r?"readwrite":"readonly");let i=a.store;return n&&(i=i.index(e.shift())),(await Promise.all([i[s](...e),r&&a.done]))[0]};return M.set(e,a),a}S=(t=>D({},t,{get:(e,s,n)=>F(e,s)||t.get(e,s,n),has:(e,s)=>!!F(e,s)||t.has(e,s)}))(S);try{self["workbox:background-sync:7.0.0"]&&_()}catch(t){}const G="requests",L="queueName";class ${constructor(){this.B=null}async addEntry(t){const e=(await this.getDb()).transaction(G,"readwrite",{durability:"relaxed"});await e.store.add(t),await e.done}async getFirstEntryId(){const t=await this.getDb(),e=await t.transaction(G).store.openCursor();return null==e?void 0:e.value.id}async getAllEntriesByQueueName(t){const e=await this.getDb(),s=await e.getAllFromIndex(G,L,IDBKeyRange.only(t));return s||new Array}async getEntryCountByQueueName(t){return(await this.getDb()).countFromIndex(G,L,IDBKeyRange.only(t))}async deleteEntry(t){const e=await this.getDb();await e.delete(G,t)}async getFirstEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"next")}async getLastEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"prev")}async getEndEntryFromIndex(t,e){const s=await this.getDb(),n=await s.transaction(G).store.index(L).openCursor(t,e);return null==n?void 0:n.value}async getDb(){return this.B||(this.B=await function(t,e,{blocked:s,upgrade:n,blocking:r,terminated:a}={}){const i=indexedDB.open(t,e),o=C(i);return n&&i.addEventListener("upgradeneeded",(t=>{n(C(i.result),t.oldVersion,t.newVersion,C(i.transaction))})),s&&i.addEventListener("blocked",(()=>s())),o.then((t=>{a&&t.addEventListener("close",(()=>a())),r&&t.addEventListener("versionchange",(()=>r()))})).catch((()=>{})),o}("workbox-background-sync",3,{upgrade:this.O})),this.B}O(t,e){e>0&&e<3&&t.objectStoreNames.contains(G)&&t.deleteObjectStore(G);t.createObjectStore(G,{autoIncrement:!0,keyPath:"id"}).createIndex(L,L,{unique:!1})}}class K{constructor(t){this.k=t,this._=new $}async pushEntry(t){delete t.id,t.queueName=this.k,await this._.addEntry(t)}async unshiftEntry(t){const e=await this._.getFirstEntryId();e?t.id=e-1:delete t.id,t.queueName=this.k,await this._.addEntry(t)}async popEntry(){return this.T(await this._.getLastEntryByQueueName(this.k))}async shiftEntry(){return this.T(await this._.getFirstEntryByQueueName(this.k))}async getAll(){return await this._.getAllEntriesByQueueName(this.k)}async size(){return await this._.getEntryCountByQueueName(this.k)}async deleteEntry(t){await this._.deleteEntry(t)}async T(t){return t&&await this.deleteEntry(t.id),t}}const Q=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class H{static async fromRequest(t){const e={url:t.url,headers:{}};"GET"!==t.method&&(e.body=await t.clone().arrayBuffer());for(const[s,n]of t.headers.entries())e.headers[s]=n;for(const s of Q)void 0!==t[s]&&(e[s]=t[s]);return new H(e)}constructor(t){"navigate"===t.mode&&(t.mode="same-origin"),this.j=t}toObject(){const t=Object.assign({},this.j);return t.headers=Object.assign({},this.j.headers),t.body&&(t.body=t.body.slice(0)),t}toRequest(){return new Request(this.j.url,this.j)}clone(){return new H(this.toObject())}}const z="workbox-background-sync",J=new Set,V=t=>{const e={request:new H(t.requestData).toRequest(),timestamp:t.timestamp};return t.metadata&&(e.metadata=t.metadata),e};class X{constructor(t,{forceSyncFallback:s,onSync:n,maxRetentionTime:r}={}){if(this.S=!1,this.N=!1,J.has(t))throw new e("duplicate-queue-name",{name:t});J.add(t),this.P=t,this.C=n||this.replayRequests,this.U=r||10080,this.W=Boolean(s),this.A=new K(this.P),this.M()}get name(){return this.P}async pushRequest(t){await this.F(t,"push")}async unshiftRequest(t){await this.F(t,"unshift")}async popRequest(){return this.G("pop")}async shiftRequest(){return this.G("shift")}async getAll(){const t=await this.A.getAll(),e=Date.now(),s=[];for(const n of t){const t=60*this.U*1e3;e-n.timestamp>t?await this.A.deleteEntry(n.id):s.push(V(n))}return s}async size(){return await this.A.size()}async F({request:t,metadata:e,timestamp:s=Date.now()},n){const r={requestData:(await H.fromRequest(t.clone())).toObject(),timestamp:s};switch(e&&(r.metadata=e),n){case"push":await this.A.pushEntry(r);break;case"unshift":await this.A.unshiftEntry(r)}this.S?this.N=!0:await this.registerSync()}async G(t){const e=Date.now();let s;switch(t){case"pop":s=await this.A.popEntry();break;case"shift":s=await this.A.shiftEntry()}if(s){const n=60*this.U*1e3;return e-s.timestamp>n?this.G(t):V(s)}}async replayRequests(){let t;for(;t=await this.shiftRequest();)try{await fetch(t.request.clone())}catch(s){throw await this.unshiftRequest(t),new e("queue-replay-failed",{name:this.P})}}async registerSync(){if("sync"in self.registration&&!this.W)try{await self.registration.sync.register(`${z}:${this.P}`)}catch(t){}}M(){"sync"in self.registration&&!this.W?self.addEventListener("sync",(t=>{if(t.tag===`${z}:${this.P}`){const e=async()=>{let e;this.S=!0;try{await this.C({queue:this})}catch(t){if(t instanceof Error)throw e=t,e}finally{!this.N||e&&!t.lastChance||await this.registerSync(),this.S=!1,this.N=!1}};t.waitUntil(e())}})):this.C({queue:this})}static get L(){return J}}class Y{constructor(t,e){this.fetchDidFail=async({request:t})=>{await this.$.pushRequest({request:t})},this.$=new X(t,e)}}class Z extends v{constructor(t={}){super(t),this.plugins.some((t=>"cacheWillUpdate"in t))||this.plugins.unshift(h),this.I=t.networkTimeoutSeconds||0}async D(t,s){const n=[],r=[];let a;if(this.I){const{id:e,promise:i}=this.K({request:t,logs:n,handler:s});a=e,r.push(i)}const i=this.H({timeoutId:a,request:t,logs:n,handler:s});r.push(i);const o=await s.waitUntil((async()=>await s.waitUntil(Promise.race(r))||await i)());if(!o)throw new e("no-response",{url:t.url});return o}K({request:t,logs:e,handler:s}){let n;return{promise:new Promise((e=>{n=setTimeout((async()=>{e(await s.cacheMatch(t))}),1e3*this.I)})),id:n}}async H({timeoutId:t,request:e,logs:s,handler:n}){let r,a;try{a=await n.fetchAndCachePut(e)}catch(t){t instanceof Error&&(r=t)}return t&&clearTimeout(t),!r&&a||(a=await n.cacheMatch(e)),a}}try{self["workbox:google-analytics:7.0.0"]&&_()}catch(t){}const tt="www.google-analytics.com",et="www.googletagmanager.com",st=/^\/(\w+\/)?collect/,nt=t=>{const e=({url:t})=>t.hostname===tt&&st.test(t.pathname),s=new R({plugins:[t]});return[new n(e,s,"GET"),new n(e,s,"POST")]},rt=t=>{const e=new Z({cacheName:t});return new n((({url:t})=>t.hostname===tt&&"/analytics.js"===t.pathname),e,"GET")},at=t=>{const e=new Z({cacheName:t});return new n((({url:t})=>t.hostname===et&&"/gtag/js"===t.pathname),e,"GET")},it=t=>{const e=new Z({cacheName:t});return new n((({url:t})=>t.hostname===et&&"/gtm.js"===t.pathname),e,"GET")};importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js","/assets/public/src_desktop/scripts/sw_ga.js"),f({prefix:"public-v2.0"}),self.skipWaiting(),self.addEventListener("activate",(()=>self.clients.claim())),c("/",new E,"GET"),c(/\/int|\/api\/|\/vendor|\/mobile|\/video|\/ad/,new R,"GET"),c(/\/assets\//,new E,"GET"),c(/\/(app_assets|images)\//,new class extends v{async D(t,s){let n,r=await s.cacheMatch(t);if(!r)try{r=await s.fetchAndCachePut(t)}catch(t){t instanceof Error&&(n=t)}if(!r)throw new e("no-response",{url:t.url,error:n});return r}},"GET"),((t={})=>{const e=w(t.cacheName),s=new Y("workbox-google-analytics",{maxRetentionTime:2880,onSync:(n=t,async({queue:t})=>{let e;for(;e=await t.shiftRequest();){const{request:s,timestamp:r}=e,a=new URL(s.url);try{const t="POST"===s.method?new URLSearchParams(await s.clone().text()):a.searchParams,e=r-(Number(t.get("qt"))||0),i=Date.now()-e;if(t.set("qt",String(i)),n.parameterOverrides)for(const e of Object.keys(n.parameterOverrides)){const s=n.parameterOverrides[e];t.set(e,s)}"function"==typeof n.hitFilter&&n.hitFilter.call(null,t),await fetch(new Request(a.origin+a.pathname,{body:t.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}}))}catch(s){throw await t.unshiftRequest(e),s}}})});var n;const r=[it(e),rt(e),at(e),...nt(s)],i=new a;for(const t of r)i.registerRoute(t);i.addFetchListener()})({});
