const n="offline",i="/errorPages/offline.html";self.addEventListener("install",e=>{e.waitUntil((async()=>{await(await caches.open(n)).add(new Request(i,{cache:"reload"}))})()),self.skipWaiting()});self.addEventListener("activate",e=>{e.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim()});self.addEventListener("fetch",e=>{e.request.mode==="navigate"&&e.respondWith((async()=>{try{const t=await e.preloadResponse;return t||await fetch(e.request)}catch(t){return console.log("Fetch failed; returning offline page instead.",t),await(await caches.open(n)).match(i)}})())});self.addEventListener("notificationclick",e=>{e.notification.close(),e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then(t=>{const a=t[0];a&&(a.focus(),a.postMessage({type:"notification",data:e.notification.data}))}))});
