const CACHE_VERSION=1;const CACHE_NAME="player-stream-cache-v";const CACHE_CURRENT=CACHE_NAME+CACHE_VERSION;self.addEventListener("activate",event=>{event.waitUntil(caches.keys().then(cacheNames=>Promise.all(cacheNames.map(cacheName=>{if(cacheName!=CACHE_CURRENT){return caches.delete(cacheName)}}))))});self.addEventListener("fetch",function(event){if(event.request.method!=="GET")return;if(!self.caches)return;if(event.request.url.indexOf("/player/stream/")===-1)return;event.respondWith(async function(){const cache=await caches.open(CACHE_CURRENT);const cached_response=await cache.match(event.request);if(cached_response){return cached_response}return fetch(event.request)}())});self.addEventListener("message",async function(event){switch(event.data?.action){case"claim_clients":await self.clients.claim();event.ports[0].postMessage(true);break;case"cache_gc":console.log("Cache GC: start");console.log(event.data.data);caches.open(CACHE_CURRENT).then(function(cache){event.data.data.forEach(function(url){cache.delete(url)});console.log("Cache GC: end")})}});