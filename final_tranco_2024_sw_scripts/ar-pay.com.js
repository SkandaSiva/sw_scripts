const cacheName="MerchantStore",cacheUrls=["/"],getResponseFromCache=async e=>(await caches.open(cacheName)).match(e),refreshBrowserCache=async e=>{if(!e)return;(await self.clients.matchAll()).forEach((a=>{const t={type:"refresh",url:e.url,eTag:e.headers.get("ETag")};a.postMessage(JSON.stringify(t))}))},updateCache=async(e,a)=>{if(!e||!a)return;const t=await caches.open(cacheName);await t.put(e,a),await refreshBrowserCache(a)},isomorphicFetch=async e=>{try{const a=await fetch(e);return updateCache(e,a.clone()),a}catch(a){return await getResponseFromCache(e)}};self.addEventListener("install",(e=>{e.waitUntil(caches.open(cacheName).then((e=>{try{e.addAll(cacheUrls)}catch(e){}})).then(self.skipWaiting()))})),self.addEventListener("activate",(()=>(console.log("Service worker activated"),null))),self.addEventListener("fetch",(e=>"POST"!==e.request.method&&e.request.url.startsWith(self.location.origin)?e.request.url.indexOf("audio")>-1?e:(e.respondWith(isomorphicFetch(e.request)),null):e));