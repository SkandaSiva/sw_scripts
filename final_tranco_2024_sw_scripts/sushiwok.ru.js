let OFFLINE_VERSION=4,CACHE_NAME="offline",OFFLINE_URL="/public/offline.html";self.addEventListener("install",e=>{e.waitUntil((async()=>{let e=await caches.open(CACHE_NAME);await e.add(new Request(OFFLINE_URL,{cache:"reload"}))})()),self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim()}),self.addEventListener("fetch",e=>{"navigate"===e.request.mode&&e.respondWith((async()=>{try{let a=await e.preloadResponse;if(a)return a;return await fetch(e.request)}catch(a){console.log("Не удалось получить данные; вместо этого возвращаем страницу для автономного режима.",a);let e=await caches.open(CACHE_NAME);return await e.match(OFFLINE_URL)}})())});