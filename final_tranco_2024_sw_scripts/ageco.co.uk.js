class e{constructor(){this.events={}}dispatchEvent(e,t){if(void 0===t&&(t={}),this.events[e]){const s=this.events[e];if(void 0!==s)for(let i=0;i<s.length;i++)this.events[e][i](t)}}addEventListener(e,t){this.events[e]||(this.events[e]=[]);let s=!0;for(let i=0;i<this.events[e].length;i++)if(t===this.events[e][i]){s=!1;break}s&&this.events[e].push(t)}removeEventListener(e,t){if(void 0===t&&(t=null),t)for(let s=0;s<this.events[e].length;s++){if(this.events[e][s]===t){this.events[e].splice(s,1);break}}else delete this.events[e]}}class t extends e{static get INSTALLED_EVENT(){return"INSTALLED_EVENT"}static get ACTIVATED_EVENT(){return"ACTIVATED_EVENT"}constructor(){super(),this.clientData={},addEventListener("install",this.installed.bind(this)),addEventListener("fetch",this.fetched.bind(this)),addEventListener("activate",this.activated.bind(this)),addEventListener("message",this.receivedMessage.bind(this))}installed(e){this.dispatchEvent(t.INSTALLED_EVENT,e)}fetched(e){}activated(e){"undefined"!=typeof clients&&clients.claim(),this.dispatchEvent(t.ACTIVATED_EVENT,e)}receivedMessage(e){if(e.data){const t=JSON.parse(e.data),s={error:t.function+" doesn't exist in service worker"};this[t.function]?this[t.function](t).then((t=>{e.ports[0].postMessage(JSON.stringify(t))})).catch((t=>{e.ports[0].postMessage(JSON.stringify(t))})):(s.request=e.data,e.ports&&e.ports.length>0&&e.ports[0].postMessage(JSON.stringify(s)))}}postData(e){const t=e.url?e.url:"/",s=e.body?e.body:{},i=e.method?e.method:"POST";if(0===Object.keys(s).length&&"POST"===i)return new Promise(((e,t)=>{t({status:"error",message:"No data to send"})}));const n={method:i,mode:"no-cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",referrer:"no-referrer"};return Object.keys(s).length>0&&(n.body=JSON.stringify(s)),new Promise(((e,s)=>{fetch(t,n).then((t=>{const i={function:"postData",status:t.status,body:{},message:""};t.json().then((t=>{404!==i.status&&500!==i.status&&(i.body=t),t.message&&(i.message=t.message),e(i)})).catch((e=>{s(e)}))})).catch((e=>{s(e)}))}))}saveFromClient(e){const t=e.key,s=e.val;return new Promise(((e,i)=>{"string"==typeof t?(this.clientData[t]=s,e({status:"success"})):i("key must be a string")}))}sendToClient(e){self.clients.matchAll().then((t=>{t.forEach((t=>{t.postMessage(JSON.stringify(e))}))}))}}class s{static get IMAGE_DEFER_URL(){return"IMAGE_DEFER_URL"}static get SERVER_ERROR(){return"SERVER_ERROR"}}class i extends t{constructor(e){void 0===e&&(e={version:1,cache:!0,all:!0,requests:[],ignore:[/\/browser-sync\//],shellScripts:["/"],prioritise:[/css$|js$|ttf$|woff$|woff2$|jpg$|svg$|png$|^blob:/],cacheNames:[],errorCodes:/^4|^5/g,trackOffline:!1,stripQueryOffline:[],image:null}),super(),e.image&&e.shellScripts.push(e.image);for(let t=0;t<e.shellScripts.length;t++)e.prioritise.push(e.shellScripts[t]);this.cacheOptions=e,this.cacheOptions.cacheNames.push("default_v"+this.cacheOptions.version),this.cacheOptions.trackOffline,this.placeholderImage=null}cacheAvailable(){let e=!1;return"undefined"!=typeof caches&&("undefined"!=typeof window?window.isSecureContext&&(e=!0):e=!0),e}cacheOrSave(e){const t=e,s=t.url;return this.cacheAvailable()?caches.match(e).then((i=>{if(i){const t=i.url.replace(self.location.origin,"");return this.shouldPrioritiseCache(t)?navigator.onLine?this.checkExpiration(e,i):i:navigator.onLine?this.saveCacheRequest({request:e}):i}return caches.open("default_v"+this.cacheOptions.version).then((i=>{const n={request:t,cache:i};if(this.cacheOptions.all){if(this.shouldIgnore(s))return fetch(e).then((e=>e));if(this.shouldStripQuery(t.url)){if(navigator.onLine)return this.saveCacheRequest(n);{const e=t.url.split("?"),s=new Request(e[0]);return i.match(s).then((e=>{if(e)return e}))}}return this.saveCacheRequest(n)}return this.canCache(s)?this.saveCacheRequest(n):fetch(e).then((e=>e))})).catch((e=>{}))})).catch((e=>{})):fetch(e).then((e=>e))}fetched(e){super.fetched(e);const t=e.request,s=t.url;"GET"===t.method&&s.startsWith("http")&&e.respondWith(this.cacheOrSave(t))}cacheLink(e){return new Promise(((t,s)=>{if(e.href){const s=new Request(e.href);t(this.cacheOrSave(s))}else s(e)}))}shouldIgnore(e){return this.cacheOptions.ignore.some((t=>t.test(e)))}canCache(e){return!this.shouldIgnore(e)&&this.cacheOptions.requests.some((t=>"object"==typeof t?t.test(e):t.indexOf(e)>-1))}shouldPrioritiseCache(e){return this.cacheOptions.prioritise.some((t=>"object"==typeof t?t.test(e):t.indexOf(e)>-1))}shouldStripQuery(e){return!!this.cacheOptions.stripQueryOffline&&(this.cacheOptions.stripQueryOffline.length>0&&this.cacheOptions.stripQueryOffline.some((t=>"object"==typeof t?t.test(e):t.indexOf(e)>-1)))}installed(e){super.installed(e),caches.open("default_v"+this.cacheOptions.version).then((e=>{e.addAll(this.cacheOptions.shellScripts).then((e=>{})).catch((e=>{}))})).catch((e=>{}))}activated(e){super.activated(e);this.cacheAvailable()&&e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(-1===this.cacheOptions.cacheNames.indexOf(e))return caches.delete(e)}))))).catch((e=>{})))}deleteCacheRequest(e){let t=e.url;t&&(t=t.replace("blob:",""));const s=e.cacheName;return new Promise(((e,i)=>caches.open(s).then((s=>{s.delete(t).then((t=>{e(t)})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))))}openCache(e,t){return new Promise(((s,i)=>{caches.open(e).then((e=>{e.match(t).then((t=>{t&&s(e)})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))}))}getCacheFromRequest(e){return new Promise(((t,s)=>{caches.keys().then((i=>{const n=[];i.forEach((t=>{n.push(this.openCache(t,e))})),Promise.allSettled(n).then((e=>{let s=null;e.forEach((e=>{"fulfilled"===e.status&&(s=e.value)})),t(s||null)})).catch((e=>{s(e)}))}))}))}async saveCacheRequest(e){const t=e.request,i=t.url,n={};let r=e.cache,c=null,a=null;return r||(r=await this.getCacheFromRequest(t)),this.cacheOptions.errorCodes&&("undefined"!=typeof AbortController&&(c=new AbortController,a=c.signal,a.addEventListener("abort",(e=>{this.sendToClient({msg:"Can't connect to server",type:s.SERVER_ERROR,data:{url:i}})}))),n.signal=a),fetch(t,n).then((e=>{const s=e.status.toString();if(this.cacheOptions.errorCodes){if(this.cacheOptions.errorCodes.test(s))return r.match(t).then((s=>s||this.fallbackResp(t,c,e)));{let t=i;return t=t.replace("blob:",""),r&&r.put(t,e.clone()),e}}if("200"===s){let t=i;return t=t.replace("blob:",""),r&&r.put(t,e.clone()),e}return e})).catch((e=>r.match(t).then((e=>e||(this.cacheOptions.errorCodes||"image"===t.destination&&this.cacheOptions.image?this.fallbackResp(t,c):e)))))}fallbackResp(e,t,s){void 0===s&&(s=null);let i=""+e.referrer;if(!e.referrer&&(i=e.url,i.indexOf("/")>-1)){const t=e.url.split("/");i=t[0]+"//"+t[2]+"/"}"image"===e.destination&&this.cacheOptions.image?i=this.cacheOptions.image:t&&t.abort();const n=new Request(i);return caches.match(n).then((e=>e||(t?void 0:s)))}checkExpiration(e,t){const s=t.headers;let i=0,n=NaN,r=!1;for(const e of s.keys()){if("cache-control"===e){const t=s.get(e);if(t.indexOf("max-age")>-1){const e=t.split("max-age=");i=Number(e[e.length-1])}}"date"===e&&(n=new Date(s.get(e)))}if(i>0&&!isNaN(n)){const t=new Date;if(n.setSeconds(n.getSeconds()+i),t>n)return r=!0,caches.open("default_v"+this.cacheOptions.version).then((t=>{const s={request:e,cache:t};return this.saveCacheRequest(s)}))}if(!r)return t}}const n=new i({version:"20145",cache:!0,all:!1,requests:[/\./],ignore:[/\/browser-sync\//,/\/episerver\//i,/\/util\//i],shellScripts:[],prioritise:[/\.|^blob:/],cacheNames:[],errorCodes:null});n.addEventListener(t.ACTIVATED_EVENT,(e=>{"undefined"==typeof window&&self.skipWaiting()})),n.addEventListener(t.INSTALLED_EVENT,(e=>{self.skipWaiting()})),"undefined"!=typeof window&&(window.ServiceWorkerBase=i);