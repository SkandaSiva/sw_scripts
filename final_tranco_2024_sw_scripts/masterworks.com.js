var H=s=>{throw TypeError(s)};var I=(s,e,t)=>e.has(s)||H("Cannot "+t);var w=(s,e,t)=>(I(s,e,"read from private field"),t?t.call(s):e.get(s)),k=(s,e,t)=>e.has(s)?H("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),U=(s,e,t,n)=>(I(s,e,"write to private field"),n?n.call(s,t):e.set(s,t),t),d=(s,e,t)=>(I(s,e,"access private method"),t);try{self["workbox:core:7.0.0"]&&_()}catch{}const J=(s,...e)=>{let t=s;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},X=J;class l extends Error{constructor(e,t){const n=X(e,t);super(n),this.name=e,this.details=t}}const Z=new Set,p={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},M=s=>[p.prefix,s,p.suffix].filter(e=>e&&e.length>0).join("-"),G=s=>{for(const e of Object.keys(p))s(e)},x={updateDetails:s=>{G(e=>{typeof s[e]=="string"&&(p[e]=s[e])})},getGoogleAnalyticsName:s=>s||M(p.googleAnalytics),getPrecacheName:s=>s||M(p.precache),getPrefix:()=>p.prefix,getRuntimeName:s=>s||M(p.runtime),getSuffix:()=>p.suffix};function L(s,e){const t=new URL(s);for(const n of e)t.searchParams.delete(n);return t.href}async function V(s,e,t,n){const r=L(e.url,t);if(e.url===r)return s.match(e,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),a=await s.keys(e,i);for(const c of a){const o=L(c.url,t);if(r===o)return s.match(c,n)}}let P;function ee(){if(P===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),P=!0}catch{P=!1}P=!1}return P}class te{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}async function se(){for(const s of Z)await s()}const ne=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");function re(s){return new Promise(e=>setTimeout(e,s))}function S(s,e){const t=e();return s.waitUntil(t),t}async function ie(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const n=s.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},a=ee()?n.body:await n.blob();return new Response(a,i)}function ae(){self.addEventListener("activate",()=>self.clients.claim())}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const ce="__WB_REVISION__";function oe(s){if(!s)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(typeof s=="string"){const i=new URL(s,location.href);return{cacheKey:i.href,url:i.href}}const{revision:e,url:t}=s;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(!e){const i=new URL(t,location.href);return{cacheKey:i.href,url:i.href}}const n=new URL(t,location.href),r=new URL(t,location.href);return n.searchParams.set(ce,e),{cacheKey:n.href,url:r.href}}class le{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:n})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const r=t.originalRequest.url;n?this.notUpdatedURLs.push(r):this.updatedURLs.push(r)}return n}}}class he{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:n})=>{const r=(n==null?void 0:n.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return r?new Request(r,{headers:t.headers}):t},this._precacheController=e}}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function N(s){return typeof s=="string"?new Request(s):s}class ue{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new te,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const n of this._plugins)this._pluginStateMap.set(n,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let n=N(e);if(n.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const a=await t.preloadResponse;if(a)return a}const r=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const a of this.iterateCallbacks("requestWillFetch"))n=await a({request:n.clone(),event:t})}catch(a){if(a instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:a.message})}const i=n.clone();try{let a;a=await fetch(n,n.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const c of this.iterateCallbacks("fetchDidSucceed"))a=await c({event:t,request:i,response:a});return a}catch(a){throw r&&await this.runCallbacks("fetchDidFail",{error:a,event:t,originalRequest:r.clone(),request:i.clone()}),a}}async fetchAndCachePut(e){const t=await this.fetch(e),n=t.clone();return this.waitUntil(this.cachePut(e,n)),t}async cacheMatch(e){const t=N(e);let n;const{cacheName:r,matchOptions:i}=this._strategy,a=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},i),{cacheName:r});n=await caches.match(a,c);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))n=await o({cacheName:r,matchOptions:i,cachedResponse:n,request:a,event:this.event})||void 0;return n}async cachePut(e,t){const n=N(e);await re(0);const r=await this.getCacheKey(n,"write");if(!t)throw new l("cache-put-with-no-response",{url:ne(r.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return!1;const{cacheName:a,matchOptions:c}=this._strategy,o=await self.caches.open(a),h=this.hasCallback("cacheDidUpdate"),b=h?await V(o,r.clone(),["__WB_REVISION__"],c):null;try{await o.put(r,h?i.clone():i)}catch(f){if(f instanceof Error)throw f.name==="QuotaExceededError"&&await se(),f}for(const f of this.iterateCallbacks("cacheDidUpdate"))await f({cacheName:a,oldResponse:b,newResponse:i.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const n=`${e.url} | ${t}`;if(!this._cacheKeys[n]){let r=e;for(const i of this.iterateCallbacks("cacheKeyWillBeUsed"))r=N(await i({mode:t,request:r,event:this.event,params:this.params}));this._cacheKeys[n]=r}return this._cacheKeys[n]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const n of this.iterateCallbacks(e))await n(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const n=this._pluginStateMap.get(t);yield i=>{const a=Object.assign(Object.assign({},i),{state:n});return t[e](a)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,n=!1;for(const r of this.iterateCallbacks("cacheWillUpdate"))if(t=await r({request:this.request,response:t,event:this.event})||void 0,n=!0,!t)break;return n||t&&t.status!==200&&(t=void 0),t}}class ${constructor(e={}){this.cacheName=x.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,n=typeof e.request=="string"?new Request(e.request):e.request,r="params"in e?e.params:void 0,i=new ue(this,{event:t,request:n,params:r}),a=this._getResponse(i,n,t),c=this._awaitComplete(a,i,n,t);return[a,c]}async _getResponse(e,t,n){await e.runCallbacks("handlerWillStart",{event:n,request:t});let r;try{if(r=await this._handle(t,e),!r||r.type==="error")throw new l("no-response",{url:t.url})}catch(i){if(i instanceof Error){for(const a of e.iterateCallbacks("handlerDidError"))if(r=await a({error:i,event:n,request:t}),r)break}if(!r)throw i}for(const i of e.iterateCallbacks("handlerWillRespond"))r=await i({event:n,request:t,response:r});return r}async _awaitComplete(e,t,n,r){let i,a;try{i=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:r,request:n,response:i}),await t.doneWaiting()}catch(c){c instanceof Error&&(a=c)}if(await t.runCallbacks("handlerDidComplete",{event:r,request:n,response:i,error:a}),t.destroy(),a)throw a}}class y extends ${constructor(e={}){e.cacheName=x.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const n=await t.cacheMatch(e);return n||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let n;const r=t.params||{};if(this._fallbackToNetwork){const i=r.integrity,a=e.integrity,c=!a||a===i;n=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?a||i:void 0})),i&&c&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,n.clone()))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return n}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const n=await t.fetch(e);if(!await t.cachePut(e,n.clone()))throw new l("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[n,r]of this.plugins.entries())r!==y.copyRedirectedCacheableResponsesPlugin&&(r===y.defaultPrecacheCacheabilityPlugin&&(e=n),r.cacheWillUpdate&&t++);t===0?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};y.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await ie(s):s}};class fe{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:n=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:x.getPrecacheName(e),plugins:[...t,new he({precacheController:this})],fallbackToNetwork:n}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const n of e){typeof n=="string"?t.push(n):n&&n.revision===void 0&&t.push(n.url);const{cacheKey:r,url:i}=oe(n),a=typeof n!="string"&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(i)&&this._urlsToCacheKeys.get(i)!==r)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(i),secondEntry:r});if(typeof n!="string"&&n.integrity){if(this._cacheKeysToIntegrities.has(r)&&this._cacheKeysToIntegrities.get(r)!==n.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:i});this._cacheKeysToIntegrities.set(r,n.integrity)}if(this._urlsToCacheKeys.set(i,r),this._urlsToCacheModes.set(i,a),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(c)}}}install(e){return S(e,async()=>{const t=new le;this.strategy.plugins.push(t);for(const[i,a]of this._urlsToCacheKeys){const c=this._cacheKeysToIntegrities.get(a),o=this._urlsToCacheModes.get(i),h=new Request(i,{integrity:c,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:a},request:h,event:e}))}const{updatedURLs:n,notUpdatedURLs:r}=t;return{updatedURLs:n,notUpdatedURLs:r}})}activate(e){return S(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),n=await t.keys(),r=new Set(this._urlsToCacheKeys.values()),i=[];for(const a of n)r.has(a.url)||(await t.delete(a),i.push(a.url));return{deletedURLs:i}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n)return(await self.caches.open(this.strategy.cacheName)).match(n)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return n=>(n.request=new Request(e),n.params=Object.assign({cacheKey:t},n.params),this.strategy.handle(n))}}let D;const F=()=>(D||(D=new fe),D);try{self["workbox:routing:7.0.0"]&&_()}catch{}const z="GET",v=s=>s&&typeof s=="object"?s:{handle:s};class K{constructor(e,t,n=z){this.handler=v(t),this.match=e,this.method=n}setCatchHandler(e){this.catchHandler=v(e)}}class de extends K{constructor(e,t,n){const r=({url:i})=>{const a=e.exec(i.href);if(a&&!(i.origin!==location.origin&&a.index!==0))return a.slice(1)};super(r,t,n)}}class ge{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(r=>{typeof r=="string"&&(r=[r]);const i=new Request(...r);return this.handleRequest({request:i,event:e})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;const r=n.origin===location.origin,{params:i,route:a}=this.findMatchingRoute({event:t,request:e,sameOrigin:r,url:n});let c=a&&a.handler;const o=e.method;if(!c&&this._defaultHandlerMap.has(o)&&(c=this._defaultHandlerMap.get(o)),!c)return;let h;try{h=c.handle({url:n,request:e,event:t,params:i})}catch(f){h=Promise.reject(f)}const b=a&&a.catchHandler;return h instanceof Promise&&(this._catchHandler||b)&&(h=h.catch(async f=>{if(b)try{return await b.handle({url:n,request:e,event:t,params:i})}catch(q){q instanceof Error&&(f=q)}if(this._catchHandler)return this._catchHandler.handle({url:n,request:e,event:t});throw f})),h}findMatchingRoute({url:e,sameOrigin:t,request:n,event:r}){const i=this._routes.get(n.method)||[];for(const a of i){let c;const o=a.match({url:e,sameOrigin:t,request:n,event:r});if(o)return c=o,(Array.isArray(c)&&c.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(c=void 0),{route:a,params:c}}return{}}setDefaultHandler(e,t=z){this._defaultHandlerMap.set(t,v(e))}setCatchHandler(e){this._catchHandler=v(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}}let T;const pe=()=>(T||(T=new ge,T.addFetchListener(),T.addCacheListener()),T);function O(s,e,t){let n;if(typeof s=="string"){const i=new URL(s,location.href),a=({url:c})=>c.href===i.href;n=new K(a,e,t)}else if(s instanceof RegExp)n=new de(s,e,t);else if(typeof s=="function")n=new K(s,e,t);else if(s instanceof K)n=s;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return pe().registerRoute(n),n}function we(s,e=[]){for(const t of[...s.searchParams.keys()])e.some(n=>n.test(t))&&s.searchParams.delete(t);return s}function*ye(s,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:r}={}){const i=new URL(s,location.href);i.hash="",yield i.href;const a=we(i,e);if(yield a.href,t&&a.pathname.endsWith("/")){const c=new URL(a.href);c.pathname+=t,yield c.href}if(n){const c=new URL(a.href);c.pathname+=".html",yield c.href}if(r){const c=r({url:i});for(const o of c)yield o.href}}class me extends K{constructor(e,t){const n=({request:r})=>{const i=e.getURLsToCacheKeys();for(const a of ye(r.url,t)){const c=i.get(a);if(c){const o=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:o}}}};super(n,e.strategy)}}function Re(s){const e=F(),t=new me(e,s);O(t)}const Ce="-precache-",be=async(s,e=Ce)=>{const n=(await self.caches.keys()).filter(r=>r.includes(e)&&r.includes(self.registration.scope)&&r!==s);return await Promise.all(n.map(r=>self.caches.delete(r))),n};function _e(){self.addEventListener("activate",s=>{const e=x.getPrecacheName();s.waitUntil(be(e).then(t=>{}))})}function ke(s){return F().getCacheKeyForURL(s)}function Ue(s){F().precache(s)}function Pe(s,e){Ue(s),Re(e)}const Te={cacheWillUpdate:async({response:s})=>s.status===200||s.status===0?s:null};class Ke extends ${constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Te),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const n=[],r=[];let i;if(this._networkTimeoutSeconds){const{id:o,promise:h}=this._getTimeoutPromise({request:e,logs:n,handler:t});i=o,r.push(h)}const a=this._getNetworkPromise({timeoutId:i,request:e,logs:n,handler:t});r.push(a);const c=await t.waitUntil((async()=>await t.waitUntil(Promise.race(r))||await a)());if(!c)throw new l("no-response",{url:e.url});return c}_getTimeoutPromise({request:e,logs:t,handler:n}){let r;return{promise:new Promise(a=>{r=setTimeout(async()=>{a(await n.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:r}}async _getNetworkPromise({timeoutId:e,request:t,logs:n,handler:r}){let i,a;try{a=await r.fetchAndCachePut(t)}catch(c){c instanceof Error&&(i=c)}return e&&clearTimeout(e),(i||!a)&&(a=await r.cacheMatch(t)),a}}const E="/assets/logo-squared-DbmxBz9S.png";var W=(s=>(s[s.emerg=0]="emerg",s[s.alert=1]="alert",s[s.crit=2]="crit",s[s.error=3]="error",s[s.warn=4]="warn",s[s.notice=5]="notice",s[s.info=6]="info",s[s.debug=7]="debug",s))(W||{}),C,m,u,g;const j=class j{constructor(e,t){k(this,u);k(this,C);k(this,m);U(this,C,e),U(this,m,t),this.emerg=d(this,u,g).bind(this,"emerg"),this.alert=d(this,u,g).bind(this,"alert"),this.crit=d(this,u,g).bind(this,"crit"),this.error=d(this,u,g).bind(this,"error"),this.warn=d(this,u,g).bind(this,"warn"),this.notice=d(this,u,g).bind(this,"notice"),this.info=d(this,u,g).bind(this,"info"),this.debug=d(this,u,g).bind(this,"debug")}segment(e){return new j(w(this,C),Object.assign({},w(this,m),e))}};C=new WeakMap,m=new WeakMap,u=new WeakSet,g=function(e,t,...n){for(const r of w(this,C))w(this,m)?r.send(e,t,w(this,m),...n):r.send(e,t,...n)};let A=j;const Ne={emerg:"error",alert:"error",crit:"error",error:"error",warn:"warn",notice:"info",info:"info",debug:"debug"};var R;class ve{constructor(e){k(this,R);U(this,R,e)}send(e,t,...n){if(w(this,R)!=="silent"&&!(W[e]>W[w(this,R)]))try{console[Ne[e]](`[${e}]`,t,...n)}catch{try{console.log(`[${e}]`,t,...n)}catch{}}}setLevel(e){U(this,R,e)}}R=new WeakMap;const xe=new ve("info"),Q=new A([xe]),Ie=s=>{var e;return s.headers.get("Sec-Fetch-Dest")==="document"||(e=s.headers.get("Accept"))!=null&&e.includes("text/html")?!0:s.url.endsWith(".html")},Y=new Ke;O(({sameOrigin:s,request:e})=>s&&Ie(e),async s=>{try{const e=await Y.handle(s);if(!e||e.status>=400)throw new Error("NetworkFirst strategy failed");return e}catch{return caches.match(ke("/index.html"))}},"GET");O(({sameOrigin:s,url:e})=>s&&e.pathname!=="/service-worker.js",Y,"GET");Pe([{"revision":"f2c24068537dee1833e4d3996e0f7b91","url":"index.html"},{"revision":"4dccc137e0badb69d13bc38dbd34a7f1","url":"manifest.webmanifest"}],{});_e();ae();self.skipWaiting();const B={actions:[],badge:E,body:"Do not miss this opportunity",icon:E},Me=s=>{Q.info(s);const e=s.data?s.data.json():{title:"You have new notifications",options:B},t=self.registration.showNotification(e.title||"You have new notifications",{...B,...e,data:{link:e.link}});return s.waitUntil(t)},De=s=>{Q.info(s);const{notification:e}=s,{data:t}=e;e.close();const n=t&&t.link?t.link:self.location.origin,r=clients.matchAll({type:"window",includeUncontrolled:!0}).then(i=>{if(i.length){const a=i.find(c=>c.url===n);if(a)return a.focus()}return clients.openWindow(n)});return s.waitUntil(r)};self.addEventListener("push",Me);self.addEventListener("notificationclick",De);
