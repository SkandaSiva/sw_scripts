 'use strict';  importScripts('https://cristaisaquarius.com.br/static/version1721233410/frontend/O2TI/Cristais/pt_BR/O2TI_ServiceWorker/js/lib/workbox-sw.js'); const {registerRoute, NavigationRoute, setDefaultHandler, setCatchHandler} = workbox.routing; const {CacheFirst, NetworkOnly, StaleWhileRevalidate} = workbox.strategies; const {CacheableResponsePlugin} = workbox.cacheableResponse; const {ExpirationPlugin} = workbox.expiration;   self.skipWaiting(); workbox.core.clientsClaim(); const OFFLINE_PAGE_URL = 'https://cristaisaquarius.com.br/offline'; const OFFLINE_CACHE_NAME = 'sw-1732540788-offline'; const PREFIX_CACHE_NAME = 'sw-1732540788-'; self.addEventListener('install', async (event) => { self.skipWaiting(); event.waitUntil( caches.open(OFFLINE_CACHE_NAME) .then((cache) => cache.add(OFFLINE_PAGE_URL)) ); caches.keys().then(keys => { keys.map(function(name) { let isOldCache = !name.includes(PREFIX_CACHE_NAME); if (isOldCache) { caches.delete(name); } }); }); }); workbox.navigationPreload.enable(); registerRoute( /\.(?:png|webp|gif|jpg|svg)$/, new CacheFirst({ cacheName: PREFIX_CACHE_NAME + 'images-cache', plugins: [ new ExpirationPlugin({ maxEntries: 5000, maxAgeSeconds: 360 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200], }), ] }) ); registerRoute( /\.(?:js|json)$/, new CacheFirst({ cacheName: PREFIX_CACHE_NAME + 'scripts-cache', plugins: [ new ExpirationPlugin({ maxEntries: 500, maxAgeSeconds: 360 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200], }), ] }) ); registerRoute( new RegExp('^https://(?:fonts\\.googleapis\\.com|fonts\\.gstatic\\.com)'), new StaleWhileRevalidate({ cacheName: PREFIX_CACHE_NAME + 'font-cdn-cache', plugins: [ new ExpirationPlugin({ maxEntries: 3, maxAgeSeconds: 360 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200], }), ], }) ); registerRoute( /\.(?:ttf|woff2)$/, new CacheFirst({ cacheName: PREFIX_CACHE_NAME + 'fonts-cache', plugins: [ new ExpirationPlugin({ maxEntries: 3, maxAgeSeconds: 360 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200], }), ] }) ); registerRoute( /\.(?:css)$/, new CacheFirst({ cacheName: PREFIX_CACHE_NAME + 'styles-cache', plugins: [ new ExpirationPlugin({ maxEntries: 10, maxAgeSeconds: 360 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200], }), ] }) ); registerRoute( ({url}) => url.pathname.includes('/admin/'), new NetworkOnly() ); const custom_strategies = [{"path":"\/checkout\/","strategy":"NetworkOnly","name_cache":"checkout"},{"path":"\/customer\/","strategy":"NetworkOnly","name_cache":"customer"},{"path":"\/admin\/","strategy":"NetworkOnly","name_cache":"administrative"},{"path":"paineladmin","strategy":"NetworkOnly","name_cache":"administrative"},{"path":"\/O2TI\/Cristais\/","strategy":"CacheFirst","name_cache":"scripts-b"},{"path":"sales\/order","strategy":"NetworkOnly","name_cache":"sales-order-view"}]; for (let route of custom_strategies) { var type = route.strategy; if (type == 'NetworkOnly') { registerRoute( ({url}) => url.pathname.includes(route.path), new NetworkOnly() ); } if (type == 'CacheFirst') { registerRoute( ({url}) => url.pathname.includes(route.path), new CacheFirst({ cacheName: PREFIX_CACHE_NAME + route.name_cache, plugins: [ new ExpirationPlugin({ maxEntries: 500, maxAgeSeconds: 120 * 24 * 60 * 60, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200] }), ] }) ); } } const networkOnly = new NetworkOnly({ cacheName: PREFIX_CACHE_NAME + 'default-strategies', }); const navigationHandler = async (params) => { if (params.event.request.method === 'GET') { if (params.event.request.url.includes('googletagmanager.com') || params.event.request.url.includes('google-analytics') || params.event.request.url.includes('gtm.js') || params.event.request.url.includes('facebook.com') || params.event.request.url.includes('facebook.net') || params.event.request.url.includes('admin') || params.event.request.url.includes('/sales/') ) { return await networkOnly.handle(params); } } try { return await networkOnly.handle(params); } catch (error) { return caches.match(OFFLINE_PAGE_URL, { cacheName: OFFLINE_CACHE_NAME, plugins: [ new ExpirationPlugin({ maxAgeSeconds: 7 * 24 * 60 * 60, maxEntries: 50, purgeOnQuotaError: true, matchOptions: { ignoreVary: true, }, }), new CacheableResponsePlugin({ statuses: [0, 200] }), ] }); } }; registerRoute(new NavigationRoute(navigationHandler)); self.addEventListener( 'fetch', event => { if (event.request.url.includes('googletagmanager') || event.request.url.includes('google-analytics') || event.request.url.includes('gtm') || event.request.url.includes('facebook.com') || event.request.url.includes('facebook.net') || event.request.url.includes('admin') || event.request.url.includes('/sales/') ) { return false; } }); 