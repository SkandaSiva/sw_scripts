var App;(()=>{const e=new URL(self.location).searchParams.get("appEnv"),t="1.490.1-1731065887",n={script:`script-v${t}`,style:`style-v${t}`,font:`font-v${t}`},a=async(e,t,n)=>{await e.put(t,n)},s=async(e,t)=>{const n=await fetch(t.clone());return n.status<400&&a(e,t,n.clone()),n},i=async e=>{const{request:t,preloadResponse:i}=e,c=await caches.open(n[t.destination]),o=await c.match(t);if(o)return(e=>{const{hostname:t}=new URL(e.url);return!(t.includes("detmir")||t.includes("zoozavr")||t.includes("eshe")||t.includes("localhost"))})(t)&&s(c,t),o;const l=await i;return l?(a(c,t,l.clone()),l):s(c,t)};"development"===e||(self.addEventListener("activate",(e=>{e.waitUntil((async()=>{await(async()=>{self.registration.navigationPreload&&await self.registration.navigationPreload.enable()})()})),(e=>{const t=new Set(Object.values(n));caches.keys().then((e=>Promise.all(e.map((e=>t.has(e)?null:caches.delete(e))))))})()})),self.addEventListener("fetch",(e=>{(e=>{const t=new URL(e.url);return!!t.protocol.includes("extension")||(!n[e.destination]||t.pathname.endsWith("sw.js"))})(e.request)||e.respondWith(i(e))}))),App={}})();