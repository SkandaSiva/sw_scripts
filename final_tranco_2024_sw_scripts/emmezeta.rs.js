!function(){"use strict";try{self["workbox:core:4.3.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}new Set;const s={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:self.registration.scope},r=e=>[s.prefix,e,s.suffix].filter(e=>e.length>0).join("-"),n={updateDetails:e=>{Object.keys(s).forEach(t=>{void 0!==e[t]&&(s[t]=e[t])})},getGoogleAnalyticsName:e=>e||r(s.googleAnalytics),getPrecacheName:e=>e||r(s.precache),getPrefix:()=>s.prefix,getRuntimeName:e=>e||r(s.runtime),getSuffix:()=>s.suffix};class o{constructor(e,t,{onupgradeneeded:s,onversionchange:r=this._onversionchange}={}){this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=r,this._db=null}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const r=indexedDB.open(this._name,this._version);r.onerror=(()=>t(r.error)),r.onupgradeneeded=(e=>{s?(r.transaction.abort(),e.target.result.close()):this._onupgradeneeded&&this._onupgradeneeded(e)}),r.onsuccess=(({target:t})=>{const r=t.result;s?r.close():(r.onversionchange=this._onversionchange.bind(this),e(r))})}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(({key:e})=>e)}async getAllMatching(e,{index:t,query:s=null,direction:r="next",count:n,includeKeys:o}={}){return await this.transaction([e],"readonly",(i,a)=>{const c=i.objectStore(e),h=t?c.index(t):c,l=[];h.openCursor(s,r).onsuccess=(({target:e})=>{const t=e.result;if(t){const{primaryKey:e,key:s,value:r}=t;l.push(o?{primaryKey:e,key:s,value:r}:r),n&&l.length>=n?a(l):t.continue()}else a(l)})})}async transaction(e,t,s){return await this.open(),await new Promise((r,n)=>{const o=this._db.transaction(e,t);o.onabort=(({target:e})=>n(e.error)),o.oncomplete=(()=>r()),s(o,e=>r(e))})}async _call(e,t,s,...r){return await this.transaction([t],s,(s,n)=>{s.objectStore(t)[e](...r).onsuccess=(({target:e})=>{n(e.result)})})}_onversionchange(){this.close()}close(){this._db&&(this._db.close(),this._db=null)}}o.prototype.OPEN_TIMEOUT=2e3;const i={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(i))for(const s of t)s in IDBObjectStore.prototype&&(o.prototype[s]=async function(t,...r){return await this._call(s,t,e,...r)});try{self.workbox.v=self.workbox.v||{}}catch(e){}try{self["workbox:routing:4.3.1"]&&_()}catch(e){}const a="GET",c=e=>e&&"object"==typeof e?e:{handle:e};class h{constructor(e,t,s){this.handler=c(t),this.match=e,this.method=s||a}}try{self["workbox:precaching:4.3.1"]&&_()}catch(e){}var l;self.addEventListener("message",function(e){const{data:t}=e;if(t&&t.type)switch(t.type){case"SKIP_WAITING":self.skipWaiting()}}),l={prefix:"@deity"},n.updateDetails(l);const u=new class{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",async e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&(await s,e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location);if(!s.protocol.startsWith("http"))return;let r,{params:n,route:o}=this.findMatchingRoute({url:s,request:e,event:t}),i=o&&o.handler;if(!i&&this._defaultHandler&&(i=this._defaultHandler),i){try{r=i.handle({url:s,request:e,event:t,params:n})}catch(e){r=Promise.reject(e)}return r&&this._catchHandler&&(r=r.catch(e=>this._catchHandler.handle({url:s,event:t,err:e}))),r}}findMatchingRoute({url:e,request:t,event:s}){const r=this._routes.get(t.method)||[];for(const n of r){let r,o=n.match({url:e,request:t,event:s});if(o)return Array.isArray(o)&&o.length>0?r=o:o.constructor===Object&&Object.keys(o).length>0&&(r=o),{route:n,params:r}}return{}}setDefaultHandler(e){this._defaultHandler=c(e)}setCatchHandler(e){this._catchHandler=c(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}};self.addEventListener("fetch",e=>{const t=u.handleRequest(e);t&&e.respondWith(t)}),u.registerRoute(new class extends h{constructor(e,{whitelist:t=[/./],blacklist:s=[]}={}){super(e=>this._match(e),e),this._whitelist=t,this._blacklist=s}_match({url:e,request:t}){if("navigate"!==t.mode)return!1;const s=e.pathname+e.search;for(const e of this._blacklist)if(e.test(s))return!1;return!!this._whitelist.some(e=>e.test(s))}}(async({url:e})=>await async function(){const e=await self.clients.matchAll();return self.registration.waiting&&e.length<=1}()?(self.registration.waiting.postMessage({type:"SKIP_WAITING",payload:void 0}),new Response("",{headers:{Refresh:"0"}})):fetch(e.href)))}();//# sourceMappingURL=sw.js.map
