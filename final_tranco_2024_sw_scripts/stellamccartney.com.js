function now(){return(new Date).getTime()}const INVALIDATION_INTERVAL=3e5,NS="IMAGE",SEPARATOR="|",VERSION=Math.ceil(now()/3e5);function buildKey(e){return NS+SEPARATOR+e+SEPARATOR+VERSION}function parseKey(e){const t=e.split(SEPARATOR);return{ns:t[0],key:t[1],ver:parseInt(t[2],10)}}function purgeExpiredRecords(e){return e.keys().then((t=>Promise.all(t.map((t=>{const n=parseKey(t);if(n.ns===NS&&n.ver!==VERSION)return e.delete(t)})))))}function proxyRequest(e,t){const n=buildKey(t.url);return e.open(n).then((e=>e.match(t).then((n=>n||fetch(t.clone()).then((n=>{if("opaque"!==n.type&&!1===n.ok)throw new Error("Resource not available");return e.put(t,n.clone()),n})).catch((()=>{console.error("Failed to fetch",t.url)}))))))}self.addEventListener("install",(e=>{e.waitUntil(self.skipWaiting())})),self.addEventListener("activate",(e=>{e.waitUntil(purgeExpiredRecords(caches))})),self.addEventListener("fetch",(e=>{const{request:t}=e;"GET"===t.method&&t.url.match(/\.(jpe?g.*|png.*|gif.*|svg.*|webp.*|woff.*|css)$/)&&e.respondWith(proxyRequest(caches,t))}));