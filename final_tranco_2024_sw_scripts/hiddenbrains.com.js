function getCurrentDate(){let e=new Date,t=e.getFullYear(),a=String(e.getMonth()+1).padStart(2,"0"),r=String(e.getDate()).padStart(2,"0"),n=String(e.getHours()).padStart(2,"0"),i=String(e.getMinutes()).padStart(2,"0");return`${t}${a}${r}${n}${i}`}const currentDate=getCurrentDate(),CACHE_VERSION=`vD-${currentDate}`,CACHE_NAME=`hb-cache-${CACHE_VERSION}`;function fetchFile(e){return new Promise((t,a)=>{fetch(e).then(e=>{e.ok?t(e):a("Fetch Failed for file: "+e.status)}).catch(e=>console.error("ERROR:",e))})}async function updateCache(e){let t=await caches.open(CACHE_NAME);try{let a=await fetch(e);a&&await t.put(e,a.clone())}catch(r){console.error("Error updating cache for:",e.url,r)}}"undefined"!=typeof window&&"serviceWorker"in navigator&&window.addEventListener("beforeunload",()=>{navigator.serviceWorker.getRegistrations().then(e=>{for(let t of e)t.unregister()})}),self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>e.addAll(["/"])))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return caches.delete(e)})))),self.registration.navigationPreload&&self.registration.navigationPreload.enable()}),self.addEventListener("fetch",e=>{e.respondWith((async()=>{let t=await caches.open(CACHE_NAME),a=await t.match(e.request);return a?(e.waitUntil(updateCache(e.request)),a):fetch(e.request)})())}),self.addEventListener("message",e=>{for(let t in e.data)fetchFile(e.data[t]).then(t=>{caches.open(CACHE_NAME).then(e=>{console.log("Caching inprogress"),e.add(t.url)}),e.source.postMessage(t.url)})});