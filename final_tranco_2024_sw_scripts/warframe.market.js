importScripts("/static/build/workers/libs/idb-keyval.js"),self.cacheName="WFM-PWA-v1",self.CACHING_DURATION=10800,self.addEventListener("install",(function(){self.skipWaiting()})),self.addEventListener("message",(e=>{"PURGE_OLD_CACHE"===e.data&&caches.open(self.cacheName).then((e=>{e.keys().then((t=>{t.forEach((t=>{e.match(t).then((n=>{let s=n.headers.get("sw-cache-expires")||null;null!=s?(s=Date.parse(s),s<new Date&&e.delete(t)):e.delete(t)}))}))}))}))})),self.addEventListener("fetch",(function(e){e.request.url.includes("://api.warframe.market")&&"GET"===e.request.method&&e.respondWith(fetch(e.request).then((function(t){return caches.open(self.cacheName).then((function(n){const s=new Date;s.setSeconds(s.getSeconds()+self.CACHING_DURATION);const i={status:t.status,statusText:t.statusText,headers:{"SW-Cache-Expires":s.toUTCString()}};t.headers.forEach(((e,t)=>{i.headers[t]=e}));const a=t.clone();return t.blob().then((t=>(n.put(e.request,new Response(t,i)),a)))}))})).catch((t=>caches.match(e.request).then((function(e){return Date.parse(e.headers.get("sw-cache-expires"))>new Date?e:t})).catch((()=>t)))))})),self.addEventListener("push",(function(e){let t,n,s,i;const a=JSON.parse(e.data.text());t=a.title||null,n=a.body||null,s=a.url||null,i=a.debounce_key||null;const c={body:n,icon:"/static/assets/frontend/logo_icon_only.png",data:{url:s}};null!==i&&(c.tag=i),e.waitUntil(Promise.all([self.registration.showNotification(t,c)]))})),self.addEventListener("pushsubscriptionchange",(function(e){e.waitUntil(self.registration.pushManager.subscribe({userVisibleOnly:!0}).then((function(e){return fetch(`${location.protocol}//api.warframe.market/v1/settings/notifications/push`,{method:"POST",headers:{"Content-type":"application/json",Accept:"application/json"},body:JSON.stringify({subscription:e,device:"web"})})})))})),self.addEventListener("notificationclick",(function(e){if(!e.action){e.notification.close();const t=e.notification.data.url,n=new URL(t||"/",self.location.origin).href,s=clients.matchAll({type:"all",includeUncontrolled:!0}).then((e=>{let t=null,s=null;for(let i=0;i<e.length;i++)if(s=e[i],s.url===n){t=s;break}return t?t.focus():clients.openWindow(n)}));e.waitUntil(Promise.all([s]))}})),self.addEventListener("notificationclose",(function(e){}));