!function e(o,a,r){function c(n,t){if(!a[n]){if(!o[n]){var i="function"==typeof require&&require;if(!t&&i)return i(n,!0);if(d)return d(n,!0);throw new Error("Cannot find module '"+n+"'")}i=a[n]={exports:{}};o[n][0].call(i.exports,function(t){var i=o[n][1][t];return c(i||t)},i,i.exports,e,o,a,r)}return a[n].exports}for(var d="function"==typeof require&&require,t=0;t<r.length;t++)c(r[t]);return c}({1:[function(t,i,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),self.addEventListener("install",function(t){t.waitUntil(self.skipWaiting())}),self.addEventListener("activate",function(t){t.waitUntil(self.clients.claim())}),self.addEventListener("push",function(t){var i,n,e;t.data?(i=t.data.json(),n=new Date,i.options.data.expirationDate&&new Date(i.options.data.expirationDate)<=n||(n=i.title,e=i.options,"image"in Notification.prototype||(e.image=void 0,e.data.compact&&e.data.compact.icon&&""!==e.data.compact.icon&&(e.icon=e.data.compact.icon),e.data.compact&&e.data.compact.body&&""!==e.data.compact.body&&(e.body=e.data.compact.body)),t.waitUntil(self.registration.showNotification(n,e).then(function(){return fetch(e.data.trackOpenEndpoint)})))):console.error("[Service Worker] No data found on event received")}),self.addEventListener("notificationclick",function(t){var i=t.notification.data[t.action]||t.notification.data.notificationClick;if(i)return i.closeOnClick&&t.notification.close(),"open-new-window"===i.actionTypeId&&i.redirectUrl?self.clients.openWindow(i.redirectUrl):void 0},!1)},{}]},{},[1]);