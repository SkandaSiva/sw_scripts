/*! "version": "undefined" "date": "undefined" "sha":undefined */!function(){const e="iolite-bets-cache",t=[/\.js(\?v=.+)$/,/\.css(\?v=.+)$/,/\/mlibrary.js/],s=[/\.svg$/g,/\.png$/g,/\.webp$/g,...t],n=(e,t)=>e.some((e=>e.test(t))),c=(e="",t=0)=>e.substring(0,t),a=(e="",s="")=>t.some(((n,a)=>{const i=t[a].exec(e),r=t[a].exec(s);return c(e,i?.index)===c(s,r?.index)&&i?.[0]!==r?.[0]})),i=(c,i)=>{const r=n(s,i?.url),l=n(t,i?.url);return r&&200===i?.status&&"basic"===i?.type?(r&&((t,s)=>{const n=s.clone();caches.open(e).then((e=>e.put(t.request,n)))})(c,i),l&&(async(s,c)=>{const i=await caches.open(e);for(const e of await i.keys())n(t,e?.url)&&a(e?.url,c?.url)&&await i.delete(e)})(0,i),i):i};self.addEventListener("install",(t=>{t.waitUntil(caches.open(e).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.delete(e).then((async()=>await self.clients.claim())))})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>i(e,t))).catch((e=>(e=>{console.warn("Catch error SW",e)})(e))))))}))}();