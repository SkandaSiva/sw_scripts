let CACHE_VERSION=1.6,CURRENT_CACHES={offline:"offline-v"+CACHE_VERSION,font:"font-v"+CACHE_VERSION},OFFLINE_URL="offline.html";function createCacheBustedRequest(e){var t=new Request(e,{cache:"reload"});return"cache"in t?t:((t=new URL(e,self.location.href)).search+=(t.search?"&":"")+"cachebust="+Date.now(),new Request(t))}function extractNameFromUrl(e){return!e.match(/http(s?):\/\/\d+\.\d+\.\d+\.\d+/)&&(e=e.replace(/^http(s)?:\/\//,"").replace(/\/.+/,"").replace(/\.[a-z]+$/i,"").replace(/\.(com|net|org|co|gov)?$/,"").replace(/([a-z0-9\-]+\.)/gi,""))?e.includes("atmailcloud")||"localhost"===e?"Atmail":e.charAt(0).toUpperCase()+e.slice(1):""}self.addEventListener("install",e=>{self.skipWaiting(),console.log("updated service worker"),e.waitUntil(fetch(createCacheBustedRequest(OFFLINE_URL)).then(t=>caches.open(CURRENT_CACHES.offline).then(e=>e.put(OFFLINE_URL,t))))}),self.addEventListener("activate",e=>{let t=Object.keys(CURRENT_CACHES).map(e=>CURRENT_CACHES[e]);e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(-1===t.indexOf(e))return console.log("Deleting out of date cache:",e),caches.delete(e)}))))}),self.addEventListener("fetch",async n=>{var e,t;-1!==n.request.url.indexOf("/download?blobId=")&&-1!==n.request.url.indexOf("&access_token=")?(e=(t=new URL(n.request.url)).searchParams.get("access_token"),t.searchParams.delete("access_token"),n.respondWith(fetch(t,{headers:{Authorization:"Bearer "+e}}))):-1!==n.request.url.indexOf("/manifest.json")?n.respondWith(fetch(n.request).then(async e=>{var t=await e.json();return t.name=extractNameFromUrl(n.request.url)+" Webmail",new Response(JSON.stringify(t),{headers:e.headers})})):(e=(t=-1!==n.request.url.indexOf(self.location.origin))&&"navigate"===n.request.mode&&-1===n.request.url.indexOf("/sso")&&-1===n.request.url.indexOf("/api")&&-1===n.request.url.indexOf("/webmail")&&-1===n.request.url.indexOf("/maintenance")&&-1===n.request.url.indexOf("/auth")&&-1===n.request.url.indexOf("/admin"),t=t&&-1!==n.request.url.indexOf("/fonts")&&-1===n.request.url.indexOf(".css"),e?(console.log("Handling fetch event",n.request.url),n.respondWith(fetch(createCacheBustedRequest(n.request.url)).catch(e=>(console.log("Fetch failed; returning offline page instead.",e),caches.match(OFFLINE_URL))))):t&&n.respondWith(caches.open(CURRENT_CACHES.font).then(t=>t.match(n.request).then(e=>e?(console.log("Returning cached font",e.url),e):fetch(n.request.clone()).then(e=>(200===e.status?(console.log("Caching font",n.request.url),t.put(n.request,e.clone())):console.log("Error fetching",n.request.url,n),e))).catch(e=>{throw console.error("Error handling font cache request:",e),e}))))}),self.addEventListener("notificationclick",n=>{n.notification.close(),n.waitUntil(clients.matchAll().then(e=>{var e=e[0],t=n.notification.data&&n.notification.data.url;return e?("focus"in e&&e.focus(),"navigate"in e&&t&&e.navigate(t),e):clients.openWindow?clients.openWindow(t||"/"):void 0}))});