!function(){"use strict";const e=1707948725944,t=`cache${e}`,n=["/client/client.242dd833.js","/client/inject_styles.803b7e80.js","/client/index.6689e46a.js","/client/FullscreenLayout.c693da53.js","/client/ColumnLayout.b7de2eba.js","/client/startWith.c0fb1b4e.js","/client/_prefs.31735641.js","/client/_commonjsHelpers.d71fabce.js","/client/Settings.4831bdc4.js","/client/faHome.341cb103.js","/client/faEye.c6db9c56.js","/client/faPlusCircle.24de3e95.js","/client/index.df1e58c8.js","/client/index.8c406eaf.js","/client/index.1f8f9bbe.js","/client/_slug_.1a16db61.js","/client/_slug_.5f060767.js","/client/_slug_.905fbcc8.js","/client/download.46d3adb1.js","/client/randnsfw.58e17bba.js","/client/index.05dbe2e4.js","/client/_slug_.be792c4b.js","/client/health.d7d606fd.js","/client/random.3465f050.js","/client/search.0fd8497e.js","/client/multi.b1668cce.js","/client/home.7728be7a.js","/client/index.9463d90b.js","/client/index.fdaa2897.js","/client/_slug_.c09e43d9.js","/client/index.b5718d10.js","/client/index.73b5841e.js","/client/_slug_.8aa27cad.js","/client/randnsfw.f1b86d5f.js","/client/random.909be688.js","/client/index.719b2cbb.js","/client/_slug_.a46d190b.js","/client/index.9e7c35bd.js","/client/index.ea5e7e27.js","/client/_slug_.ec1df5de.js"].concat(["/service-worker-index.html","/favicon.png","/global.css","/logo-192.png","/manifest.json"]),s=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==t&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const n=new URL(t.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&s.has(n.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&"image"!=t.request.destination&&t.respondWith(caches.open(`offline${e}`).then((async e=>{try{const n=await fetch(t.request);return e.put(t.request,n.clone()),n}catch(n){const s=await e.match(t.request);if(s)return s;throw n}})))))}))}();
