function urlB64ToUint8Array(e){const t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),n=atob(t),a=new Uint8Array(n.length);for(var i=0;i<n.length;++i)a[i]=n.charCodeAt(i);return a}function onFetch(e){e.respondWith(fetch(e.request).catch((function(){return caches.match(e.request).then((function(t){return t||("navigate"===e.request.mode||"GET"===e.request.method&&e.request.headers.get("accept").includes("text/html")?(console.log("[Serviceworker]","Fetching offline content",e),caches.match("/offline.html")):void 0)}))})))}const OFFLINE_VERSION=2,CACHE_NAME=`offline V${OFFLINE_VERSION}`,OFFLINE_URL="offline";self.addEventListener("install",(function(e){console.log("Service Worker installing."),self.skipWaiting(),e.waitUntil((async()=>{const e=await caches.open(CACHE_NAME);await Promise.all([OFFLINE_URL].map((t=>{e.add(new Request(t,{cache:"reload"}))})))})())})),self.addEventListener("activate",(async function(e){console.log("Service Worker activated."),self.clients.claim();let t=[CACHE_NAME];e.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable(),caches.keys().then((function(e){return Promise.all(e.map((function(e){if(-1===t.indexOf(e))return caches.delete(e)})))}))})())}));