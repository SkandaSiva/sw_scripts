(()=>{"use strict";const s=["/assets/styles/_hidden.css","/assets/styles/app.css"],t=["/assets/script/vendor/dash.js/dist/dash.mediaplayer.min.js","/assets/script/vendor/subtitles-octopus/dist/js/subtitles-octopus.js","/assets/script/vendor/subtitles-octopus/dist/js/subtitles-octopus-worker.wasm","/assets/script/vendor/subtitles-octopus/dist/js/subtitles-octopus-worker.js","/assets/script/vendor/subtitles-octopus/dist/js/subtitles-octopus-worker-legacy.js","/assets/script/httpStatus.js","/assets/script/offline.js?v=2.3.0","/offline"],e=["/assets/script/vendor/subtitles-octopus/fonts/duFlV4Kl.ari.woff2","/assets/script/vendor/subtitles-octopus/fonts/6YKEiFeD.aar.woff2","/assets/script/vendor/subtitles-octopus/fonts/lSGQ2Jfp.mgo.woff2","/assets/script/vendor/subtitles-octopus/fonts/sLITChZg.myh.woff2","/assets/script/vendor/subtitles-octopus/fonts/Yg4FBkvk.mgn.woff2","/assets/script/vendor/subtitles-octopus/fonts/Rti6j3VE.mtr.woff2","/assets/script/vendor/subtitles-octopus/fonts/tFO7ya7I.ttm.woff2","/assets/script/vendor/subtitles-octopus/fonts/hunKHNcU.nts.woff2","/assets/script/vendor/subtitles-octopus/fonts/e59aubQm.nts.woff2","/assets/script/vendor/subtitles-octopus/fonts/MjhjRhdk.nts.woff2","/assets/script/vendor/subtitles-octopus/fonts/34Hc4Zo8.nts.woff2","/assets/script/vendor/subtitles-octopus/fonts/HWam5lxg.nts.woff2","/assets/script/vendor/subtitles-octopus/fonts/iG2YSqaJ.nts.woff2"],o=["/assets/icons/httpStatus/offline.png","/assets/icons/httpStatus/400.png","/assets/icons/httpStatus/401.png","/assets/icons/httpStatus/403.png","/assets/icons/httpStatus/404.png","/assets/icons/httpStatus/405.png","/assets/icons/httpStatus/429.png","/assets/icons/httpStatus/500.png","/assets/icons/httpStatus/501.png","/assets/icons/httpStatus/503.png"];self.addEventListener("install",(async r=>{r.waitUntil(caches.delete("ao-site").then((()=>{caches.open("ao-site").then((r=>r.addAll([...s,...t,...e,...o]).catch((s=>console.error("[serviceWorker.ts]","Threw an error while adding cache:",s)))))}))),self.skipWaiting(),console.debug("[serviceWorker.ts]","Completed install event")})),self.addEventListener("activate",(s=>{s.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable()})()),self.clients.claim(),console.debug("[serviceWorker.ts]","Completed activate event")})),self.addEventListener("fetch",(s=>{const t=new URL(s.request.url);return"cdn.animeonsen.xyz"==t.host&&/^\/image\/flags\/(\S+)\.png$/.test(t.pathname)?s.respondWith((async()=>{const e=await caches.match(s.request);if(e)return e;const o=await fetch(s.request).catch((t=>{throw console.error("[serviceWorker.ts:fetch]","Failed to fetch resource:",s.request.url,t),t}));if(t.host==self.location.host){const t=await caches.open("ao-cdn");await t.put(s.request,o.clone()),console.debug("[serviceWorker.ts:fetch]","Cached resource:",s.request.url)}return o})()):"GET"===s.request.method&&s.request.url.endsWith(".woff2")?s.respondWith((async()=>{const e=await caches.match(s.request);if(e)return e;const o=await fetch(s.request).catch((t=>{throw console.error("[serviceWorker.ts:fetch]","Failed to fetch resource:",s.request.url,t),t}));if(t.host==self.location.host){const t=await caches.open("ao-site");await t.put(s.request,o.clone()),console.debug("[serviceWorker.ts:fetch]","Cached resource:",s.request.url)}return o})()):"navigate"===s.request.mode||"GET"===s.request.method&&s.request.headers.get("accept")?.includes("text/html")?s.respondWith((async()=>{try{const t=await s.preloadResponse;if(t)return t;return await fetch(s.request)}catch(s){return await caches.match("/offline")||s}})()):void 0})),self.addEventListener("offline",(s=>{console.debug("[serviceWorker.ts]","Offline event detected:",s)}))})();