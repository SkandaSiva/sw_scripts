if(!self.define){let e,s={};const n=(n,t)=>(n=new URL(n+".js",t).href,s[n]||new Promise((s=>{if("document"in self){const e=document.createElement("script");e.src=n,e.onload=s,document.head.appendChild(e)}else e=n,importScripts(n),s()})).then((()=>{let e=s[n];if(!e)throw new Error(`Module ${n} didnâ€™t register its module`);return e})));self.define=(t,i)=>{const c=e||("document"in self?document.currentScript.src:"")||location.href;if(s[c])return;let a={};const r=e=>n(e,c),u={module:{uri:c},exports:a,require:r};s[c]=Promise.all(t.map((e=>u[e]||r(e)))).then((e=>(i(...e),a)))}}define(["./workbox-0caa968f"],(function(e){"use strict";e.setCacheNameDetails({prefix:"ds-cache"}),self.skipWaiting(),e.clientsClaim(),e.registerRoute((({url:e})=>!/.*\.json.*/.test(e.href)&&/\/hall\//.test(e.href)),new e.NetworkFirst({cacheName:"ds-api",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,304]})]}),"GET"),e.registerRoute((({url:e})=>/.*\.json.*/.test(e.href)),new e.StaleWhileRevalidate({cacheName:"ds-json",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,403,404]}),{cacheKeyWillBeUsed:async({request:e})=>e.url.split("?")[0]}]}),"GET"),e.registerRoute(/.*\.js$/,new e.CacheFirst({cacheName:"ds-js",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,304]})]}),"GET"),e.registerRoute(/.*\.css$/,new e.CacheFirst({cacheName:"ds-css",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,304]})]}),"GET"),e.registerRoute((({url:e})=>!/speed\.png$/.test(e.href)&&/\.(?:svg|webp|avif|png|gif|jpe?g)$/.test(e.href)),new e.CacheFirst({cacheName:"ds-images",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,304]})]}),"GET"),e.registerRoute((({request:e})=>"document"===e.destination),new e.StaleWhileRevalidate({cacheName:"ds-html",plugins:[new e.ExpirationPlugin({maxEntries:80}),new e.CacheableResponsePlugin({statuses:[0,200,304]}),{cacheKeyWillBeUsed:async({request:e})=>e.url.split("?")[0]}]}),"GET")}));
